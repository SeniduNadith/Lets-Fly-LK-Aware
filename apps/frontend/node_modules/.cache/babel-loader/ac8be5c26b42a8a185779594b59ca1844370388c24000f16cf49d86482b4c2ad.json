{"ast":null,"code":"import axios from'axios';// Create axios instance with base configuration\nconst api=axios.create({baseURL:'http://localhost:3001/api',timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2;// Backoff on 429 Too Many Requests\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===429){var _error$response$heade;const retryAfter=parseInt(((_error$response$heade=error.response.headers)===null||_error$response$heade===void 0?void 0:_error$response$heade['retry-after'])||'1',10);const delayMs=Math.min((isNaN(retryAfter)?1:retryAfter)*1000,5000);return new Promise(resolve=>setTimeout(resolve,delayMs)).then(()=>{return api.request(error.config);});}if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){// Token expired or invalid. Clear token, but do not hard-redirect to avoid SPA loops in demo mode.\nlocalStorage.removeItem('authToken');}return Promise.reject(error);});// Auth API calls\nexport const authAPI={login:async credentials=>{const response=await api.post('/auth/login',credentials);return response.data;},logout:async()=>{const response=await api.post('/auth/logout');return response.data;},getProfile:async()=>{const response=await api.get('/auth/profile');return response.data;},register:async userData=>{const response=await api.post('/auth/register',userData);return response.data;},updateProfile:async profileData=>{const response=await api.put('/auth/profile',profileData);return response.data;},changePassword:async passwordData=>{const response=await api.put('/auth/change-password',passwordData);return response.data;}};// Policies API calls\nexport const policiesAPI={getAll:async filters=>{var _response$data;const response=await api.get('/policies',{params:filters});return((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.data)||response.data;},getById:async id=>{var _response$data2;const response=await api.get(\"/policies/\".concat(id));return((_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.data)||response.data;},create:async policyData=>{var _response$data3;const response=await api.post('/policies',policyData);return((_response$data3=response.data)===null||_response$data3===void 0?void 0:_response$data3.data)||response.data;},update:async(id,policyData)=>{var _response$data4;const response=await api.put(\"/policies/\".concat(id),policyData);return((_response$data4=response.data)===null||_response$data4===void 0?void 0:_response$data4.data)||response.data;},delete:async id=>{var _response$data5;const response=await api.delete(\"/policies/\".concat(id));return((_response$data5=response.data)===null||_response$data5===void 0?void 0:_response$data5.data)||response.data;},acknowledge:async id=>{var _response$data6;const response=await api.post(\"/policies/\".concat(id,\"/acknowledge\"));return((_response$data6=response.data)===null||_response$data6===void 0?void 0:_response$data6.data)||response.data;},getStats:async()=>{var _response$data7;const response=await api.get('/policies/stats');return((_response$data7=response.data)===null||_response$data7===void 0?void 0:_response$data7.data)||response.data;}};// Quizzes API calls\nexport const quizzesAPI={getAll:async filters=>{var _response$data8;const response=await api.get('/quizzes',{params:filters});return((_response$data8=response.data)===null||_response$data8===void 0?void 0:_response$data8.data)||response.data;},getById:async id=>{var _response$data9;const response=await api.get(\"/quizzes/\".concat(id));return((_response$data9=response.data)===null||_response$data9===void 0?void 0:_response$data9.data)||response.data;},create:async quizData=>{var _response$data0;const response=await api.post('/quizzes',quizData);return((_response$data0=response.data)===null||_response$data0===void 0?void 0:_response$data0.data)||response.data;},update:async(id,quizData)=>{var _response$data1;const response=await api.put(\"/quizzes/\".concat(id),quizData);return((_response$data1=response.data)===null||_response$data1===void 0?void 0:_response$data1.data)||response.data;},delete:async id=>{var _response$data10;const response=await api.delete(\"/quizzes/\".concat(id));return((_response$data10=response.data)===null||_response$data10===void 0?void 0:_response$data10.data)||response.data;},startQuiz:async id=>{var _response$data11;const response=await api.post(\"/quizzes/\".concat(id,\"/start\"));return((_response$data11=response.data)===null||_response$data11===void 0?void 0:_response$data11.data)||response.data;},submitQuiz:async(id,answers)=>{var _response$data12;const response=await api.post(\"/quizzes/\".concat(id,\"/attempt\"),{answers});return((_response$data12=response.data)===null||_response$data12===void 0?void 0:_response$data12.data)||response.data;},getResults:async id=>{var _response$data13;const response=await api.get(\"/quizzes/\".concat(id,\"/results\"));return((_response$data13=response.data)===null||_response$data13===void 0?void 0:_response$data13.data)||response.data;},clearIncompleteAttempts:async()=>{var _response$data14;const response=await api.delete('/quizzes/clear-incomplete');return((_response$data14=response.data)===null||_response$data14===void 0?void 0:_response$data14.data)||response.data;}};// Games API calls\nexport const gamesAPI={getAll:async filters=>{var _response$data15;const response=await api.get('/games',{params:filters});return((_response$data15=response.data)===null||_response$data15===void 0?void 0:_response$data15.data)||response.data;},getById:async id=>{var _response$data16;const response=await api.get(\"/games/\".concat(id));return((_response$data16=response.data)===null||_response$data16===void 0?void 0:_response$data16.data)||response.data;},create:async gameData=>{var _response$data17;const response=await api.post('/games',gameData);return((_response$data17=response.data)===null||_response$data17===void 0?void 0:_response$data17.data)||response.data;},update:async(id,gameData)=>{var _response$data18;const response=await api.put(\"/games/\".concat(id),gameData);return((_response$data18=response.data)===null||_response$data18===void 0?void 0:_response$data18.data)||response.data;},delete:async id=>{var _response$data19;const response=await api.delete(\"/games/\".concat(id));return((_response$data19=response.data)===null||_response$data19===void 0?void 0:_response$data19.data)||response.data;},startGame:async id=>{var _response$data20;const response=await api.post(\"/games/\".concat(id,\"/start\"));return((_response$data20=response.data)===null||_response$data20===void 0?void 0:_response$data20.data)||response.data;},submitGame:async(id,gameData)=>{var _response$data21;const response=await api.post(\"/games/\".concat(id,\"/attempt\"),gameData);return((_response$data21=response.data)===null||_response$data21===void 0?void 0:_response$data21.data)||response.data;},getResults:async id=>{var _response$data22;const response=await api.get(\"/games/\".concat(id,\"/results\"));return((_response$data22=response.data)===null||_response$data22===void 0?void 0:_response$data22.data)||response.data;},getHistory:async()=>{var _response$data23;const response=await api.get('/games/history');return((_response$data23=response.data)===null||_response$data23===void 0?void 0:_response$data23.data)||response.data;},getLeaderboard:async gameId=>{var _response$data24;const response=await api.get(\"/games/\".concat(gameId,\"/leaderboard\"));return((_response$data24=response.data)===null||_response$data24===void 0?void 0:_response$data24.data)||response.data;}};// Training API calls\nexport const trainingAPI={getAll:async()=>{var _response$data25;const response=await api.get('/training');return((_response$data25=response.data)===null||_response$data25===void 0?void 0:_response$data25.data)||response.data;},getById:async id=>{var _response$data26;const response=await api.get(\"/training/\".concat(id));return((_response$data26=response.data)===null||_response$data26===void 0?void 0:_response$data26.data)||response.data;},create:async trainingData=>{var _response$data27;// Map frontend form fields to backend schema\nconst payload={title:trainingData.title,description:trainingData.description,category:trainingData.category,role_id:undefined,// backend defaults in dev\ncontent_type:'interactive',content_url:trainingData.content||'',duration:trainingData.duration||0,prerequisites:[]};const response=await api.post('/training',payload);return((_response$data27=response.data)===null||_response$data27===void 0?void 0:_response$data27.data)||response.data;},update:async(id,trainingData)=>{var _response$data28;const response=await api.put(\"/training/\".concat(id),trainingData);return((_response$data28=response.data)===null||_response$data28===void 0?void 0:_response$data28.data)||response.data;},delete:async id=>{var _response$data29;const response=await api.delete(\"/training/\".concat(id));return((_response$data29=response.data)===null||_response$data29===void 0?void 0:_response$data29.data)||response.data;},startTraining:async id=>{var _response$data30;const response=await api.post(\"/training/\".concat(id,\"/start\"));return((_response$data30=response.data)===null||_response$data30===void 0?void 0:_response$data30.data)||response.data;},updateProgress:async(id,progressData)=>{var _response$data31;const response=await api.put(\"/training/\".concat(id,\"/progress\"),progressData);return((_response$data31=response.data)===null||_response$data31===void 0?void 0:_response$data31.data)||response.data;},completeTraining:async id=>{var _response$data32;const response=await api.post(\"/training/\".concat(id,\"/complete\"));return((_response$data32=response.data)===null||_response$data32===void 0?void 0:_response$data32.data)||response.data;},getProgress:async()=>{var _response$data33;const response=await api.get('/training/progress');return((_response$data33=response.data)===null||_response$data33===void 0?void 0:_response$data33.data)||response.data;}};// Reports API calls\nexport const reportsAPI={getDashboardStats:async()=>{var _response$data34;const response=await api.get('/reports/dashboard');return((_response$data34=response.data)===null||_response$data34===void 0?void 0:_response$data34.data)||response.data;},getComplianceReport:async filters=>{var _response$data35;const response=await api.get('/reports/compliance',{params:filters});return((_response$data35=response.data)===null||_response$data35===void 0?void 0:_response$data35.data)||response.data;},getTrainingProgressReport:async filters=>{var _response$data36;const response=await api.get('/reports/training-progress',{params:filters});return((_response$data36=response.data)===null||_response$data36===void 0?void 0:_response$data36.data)||response.data;},getQuizPerformanceReport:async filters=>{var _response$data37;const response=await api.get('/reports/quiz-performance',{params:filters});return((_response$data37=response.data)===null||_response$data37===void 0?void 0:_response$data37.data)||response.data;},getPolicyAcknowledgmentReport:async filters=>{var _response$data38;const response=await api.get('/reports/policy-acknowledgments',{params:filters});return((_response$data38=response.data)===null||_response$data38===void 0?void 0:_response$data38.data)||response.data;},exportReport:async(reportType,format,filters)=>{var _response$data39;const response=await api.post('/reports/export',{reportType,format,filters});return((_response$data39=response.data)===null||_response$data39===void 0?void 0:_response$data39.data)||response.data;}};// Facts API calls\nexport const factsAPI={getAll:async filters=>{var _response$data40;const response=await api.get('/facts',{params:filters});return((_response$data40=response.data)===null||_response$data40===void 0?void 0:_response$data40.data)||response.data;},getById:async id=>{var _response$data41;const response=await api.get(\"/facts/\".concat(id));return((_response$data41=response.data)===null||_response$data41===void 0?void 0:_response$data41.data)||response.data;},create:async factData=>{var _response$data42;const response=await api.post('/facts',factData);return((_response$data42=response.data)===null||_response$data42===void 0?void 0:_response$data42.data)||response.data;},update:async(id,factData)=>{var _response$data43;const response=await api.put(\"/facts/\".concat(id),factData);return((_response$data43=response.data)===null||_response$data43===void 0?void 0:_response$data43.data)||response.data;},delete:async id=>{var _response$data44;const response=await api.delete(\"/facts/\".concat(id));return((_response$data44=response.data)===null||_response$data44===void 0?void 0:_response$data44.data)||response.data;},getRandom:async()=>{var _response$data45;const response=await api.get('/facts/random');return((_response$data45=response.data)===null||_response$data45===void 0?void 0:_response$data45.data)||response.data;},getCategories:async()=>{var _response$data46;const response=await api.get('/facts/categories');return((_response$data46=response.data)===null||_response$data46===void 0?void 0:_response$data46.data)||response.data;},getByCategory:async category=>{var _response$data47;const response=await api.get(\"/facts/category/\".concat(category));return((_response$data47=response.data)===null||_response$data47===void 0?void 0:_response$data47.data)||response.data;}};// Profile API calls\nexport const profileAPI={getProfile:async()=>{var _response$data48;const response=await api.get('/profile');return((_response$data48=response.data)===null||_response$data48===void 0?void 0:_response$data48.data)||response.data;},updateProfile:async profileData=>{var _response$data49;const response=await api.put('/profile',profileData);return((_response$data49=response.data)===null||_response$data49===void 0?void 0:_response$data49.data)||response.data;},changePassword:async passwordData=>{var _response$data50;const response=await api.put('/profile/password',passwordData);return((_response$data50=response.data)===null||_response$data50===void 0?void 0:_response$data50.data)||response.data;},getPreferences:async()=>{var _response$data51;const response=await api.get('/profile/preferences');return((_response$data51=response.data)===null||_response$data51===void 0?void 0:_response$data51.data)||response.data;},updatePreferences:async preferences=>{var _response$data52;const response=await api.put('/profile/preferences',preferences);return((_response$data52=response.data)===null||_response$data52===void 0?void 0:_response$data52.data)||response.data;},getActivityHistory:async()=>{var _response$data53;const response=await api.get('/profile/activity');return((_response$data53=response.data)===null||_response$data53===void 0?void 0:_response$data53.data)||response.data;},toggleMFA:async()=>{var _response$data54;const response=await api.put('/profile/mfa');return((_response$data54=response.data)===null||_response$data54===void 0?void 0:_response$data54.data)||response.data;},getUserStats:async()=>{var _response$data55;const response=await api.get('/profile/stats');return((_response$data55=response.data)===null||_response$data55===void 0?void 0:_response$data55.data)||response.data;}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","_error$response2","status","_error$response$heade","retryAfter","parseInt","delayMs","Math","min","isNaN","resolve","setTimeout","then","removeItem","authAPI","login","credentials","post","data","logout","getProfile","get","register","userData","updateProfile","profileData","put","changePassword","passwordData","policiesAPI","getAll","filters","_response$data","params","getById","id","_response$data2","policyData","_response$data3","update","_response$data4","delete","_response$data5","acknowledge","_response$data6","getStats","_response$data7","quizzesAPI","_response$data8","_response$data9","quizData","_response$data0","_response$data1","_response$data10","startQuiz","_response$data11","submitQuiz","answers","_response$data12","getResults","_response$data13","clearIncompleteAttempts","_response$data14","gamesAPI","_response$data15","_response$data16","gameData","_response$data17","_response$data18","_response$data19","startGame","_response$data20","submitGame","_response$data21","_response$data22","getHistory","_response$data23","getLeaderboard","gameId","_response$data24","trainingAPI","_response$data25","_response$data26","trainingData","_response$data27","payload","title","description","category","role_id","undefined","content_type","content_url","content","duration","prerequisites","_response$data28","_response$data29","startTraining","_response$data30","updateProgress","progressData","_response$data31","completeTraining","_response$data32","getProgress","_response$data33","reportsAPI","getDashboardStats","_response$data34","getComplianceReport","_response$data35","getTrainingProgressReport","_response$data36","getQuizPerformanceReport","_response$data37","getPolicyAcknowledgmentReport","_response$data38","exportReport","reportType","format","_response$data39","factsAPI","_response$data40","_response$data41","factData","_response$data42","_response$data43","_response$data44","getRandom","_response$data45","getCategories","_response$data46","getByCategory","_response$data47","profileAPI","_response$data48","_response$data49","_response$data50","getPreferences","_response$data51","updatePreferences","preferences","_response$data52","getActivityHistory","_response$data53","toggleMFA","_response$data54","getUserStats","_response$data55"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Backoff on 429 Too Many Requests\n    if (error.response?.status === 429) {\n      const retryAfter = parseInt(error.response.headers?.['retry-after'] || '1', 10);\n      const delayMs = Math.min((isNaN(retryAfter) ? 1 : retryAfter) * 1000, 5000);\n      return new Promise((resolve) => setTimeout(resolve, delayMs)).then(() => {\n        return api.request(error.config);\n      });\n    }\n\n    if (error.response?.status === 401) {\n      // Token expired or invalid. Clear token, but do not hard-redirect to avoid SPA loops in demo mode.\n      localStorage.removeItem('authToken');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await api.put('/auth/profile', profileData);\n    return response.data;\n  },\n\n  changePassword: async (passwordData) => {\n    const response = await api.put('/auth/change-password', passwordData);\n    return response.data;\n  },\n};\n\n// Policies API calls\nexport const policiesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/policies', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/policies/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (policyData) => {\n    const response = await api.post('/policies', policyData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, policyData) => {\n    const response = await api.put(`/policies/${id}`, policyData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/policies/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  acknowledge: async (id) => {\n    const response = await api.post(`/policies/${id}/acknowledge`);\n    return response.data?.data || response.data;\n  },\n\n  getStats: async () => {\n    const response = await api.get('/policies/stats');\n    return response.data?.data || response.data;\n  },\n};\n\n// Quizzes API calls\nexport const quizzesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/quizzes', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/quizzes/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (quizData) => {\n    const response = await api.post('/quizzes', quizData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, quizData) => {\n    const response = await api.put(`/quizzes/${id}`, quizData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/quizzes/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  startQuiz: async (id) => {\n    const response = await api.post(`/quizzes/${id}/start`);\n    return response.data?.data || response.data;\n  },\n\n  submitQuiz: async (id, answers) => {\n    const response = await api.post(`/quizzes/${id}/attempt`, { answers });\n    return response.data?.data || response.data;\n  },\n\n  getResults: async (id) => {\n    const response = await api.get(`/quizzes/${id}/results`);\n    return response.data?.data || response.data;\n  },\n\n  clearIncompleteAttempts: async () => {\n    const response = await api.delete('/quizzes/clear-incomplete');\n    return response.data?.data || response.data;\n  },\n};\n\n// Games API calls\nexport const gamesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/games', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/games/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (gameData) => {\n    const response = await api.post('/games', gameData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, gameData) => {\n    const response = await api.put(`/games/${id}`, gameData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/games/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  startGame: async (id) => {\n    const response = await api.post(`/games/${id}/start`);\n    return response.data?.data || response.data;\n  },\n\n  submitGame: async (id, gameData) => {\n    const response = await api.post(`/games/${id}/attempt`, gameData);\n    return response.data?.data || response.data;\n  },\n\n  getResults: async (id) => {\n    const response = await api.get(`/games/${id}/results`);\n    return response.data?.data || response.data;\n  },\n\n  getHistory: async () => {\n    const response = await api.get('/games/history');\n    return response.data?.data || response.data;\n  },\n\n  getLeaderboard: async (gameId) => {\n    const response = await api.get(`/games/${gameId}/leaderboard`);\n    return response.data?.data || response.data;\n  },\n};\n\n// Training API calls\nexport const trainingAPI = {\n  getAll: async () => {\n    const response = await api.get('/training');\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/training/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (trainingData) => {\n    // Map frontend form fields to backend schema\n    const payload = {\n      title: trainingData.title,\n      description: trainingData.description,\n      category: trainingData.category,\n      role_id: undefined, // backend defaults in dev\n      content_type: 'interactive',\n      content_url: trainingData.content || '',\n      duration: trainingData.duration || 0,\n      prerequisites: [],\n    };\n    const response = await api.post('/training', payload);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, trainingData) => {\n    const response = await api.put(`/training/${id}`, trainingData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/training/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  startTraining: async (id) => {\n    const response = await api.post(`/training/${id}/start`);\n    return response.data?.data || response.data;\n  },\n\n  updateProgress: async (id, progressData) => {\n    const response = await api.put(`/training/${id}/progress`, progressData);\n    return response.data?.data || response.data;\n  },\n\n  completeTraining: async (id) => {\n    const response = await api.post(`/training/${id}/complete`);\n    return response.data?.data || response.data;\n  },\n\n  getProgress: async () => {\n    const response = await api.get('/training/progress');\n    return response.data?.data || response.data;\n  },\n};\n\n// Reports API calls\nexport const reportsAPI = {\n  getDashboardStats: async () => {\n    const response = await api.get('/reports/dashboard');\n    return response.data?.data || response.data;\n  },\n\n  getComplianceReport: async (filters) => {\n    const response = await api.get('/reports/compliance', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getTrainingProgressReport: async (filters) => {\n    const response = await api.get('/reports/training-progress', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getQuizPerformanceReport: async (filters) => {\n    const response = await api.get('/reports/quiz-performance', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getPolicyAcknowledgmentReport: async (filters) => {\n    const response = await api.get('/reports/policy-acknowledgments', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  exportReport: async (reportType, format, filters) => {\n    const response = await api.post('/reports/export', {\n      reportType,\n      format,\n      filters\n    });\n    return response.data?.data || response.data;\n  },\n};\n\n// Facts API calls\nexport const factsAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/facts', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/facts/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (factData) => {\n    const response = await api.post('/facts', factData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, factData) => {\n    const response = await api.put(`/facts/${id}`, factData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/facts/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  getRandom: async () => {\n    const response = await api.get('/facts/random');\n    return response.data?.data || response.data;\n  },\n\n  getCategories: async () => {\n    const response = await api.get('/facts/categories');\n    return response.data?.data || response.data;\n  },\n\n  getByCategory: async (category) => {\n    const response = await api.get(`/facts/category/${category}`);\n    return response.data?.data || response.data;\n  },\n};\n\n// Profile API calls\nexport const profileAPI = {\n  getProfile: async () => {\n    const response = await api.get('/profile');\n    return response.data?.data || response.data;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await api.put('/profile', profileData);\n    return response.data?.data || response.data;\n  },\n\n  changePassword: async (passwordData) => {\n    const response = await api.put('/profile/password', passwordData);\n    return response.data?.data || response.data;\n  },\n\n  getPreferences: async () => {\n    const response = await api.get('/profile/preferences');\n    return response.data?.data || response.data;\n  },\n\n  updatePreferences: async (preferences) => {\n    const response = await api.put('/profile/preferences', preferences);\n    return response.data?.data || response.data;\n  },\n\n  getActivityHistory: async () => {\n    const response = await api.get('/profile/activity');\n    return response.data?.data || response.data;\n  },\n\n  toggleMFA: async () => {\n    const response = await api.put('/profile/mfa');\n    return response.data?.data || response.data;\n  },\n\n  getUserStats: async () => {\n    const response = await api.get('/profile/stats');\n    return response.data?.data || response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}