{"ast":null,"code":"import axios from'axios';// Create axios instance with base configuration\nconst api=axios.create({baseURL:'http://localhost:3001/api',timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token expired or invalid\nlocalStorage.removeItem('authToken');window.location.href='/login';}return Promise.reject(error);});// Auth API calls\nexport const authAPI={login:async credentials=>{const response=await api.post('/auth/login',credentials);return response.data;},logout:async()=>{const response=await api.post('/auth/logout');return response.data;},getProfile:async()=>{const response=await api.get('/auth/profile');return response.data;},register:async userData=>{const response=await api.post('/auth/register',userData);return response.data;},updateProfile:async profileData=>{const response=await api.put('/auth/profile',profileData);return response.data;},changePassword:async passwordData=>{const response=await api.put('/auth/change-password',passwordData);return response.data;}};// Policies API calls\nexport const policiesAPI={getAll:async filters=>{const response=await api.get('/policies',{params:filters});return response.data;},getById:async id=>{const response=await api.get(\"/policies/\".concat(id));return response.data;},create:async policyData=>{const response=await api.post('/policies',policyData);return response.data;},update:async(id,policyData)=>{const response=await api.put(\"/policies/\".concat(id),policyData);return response.data;},delete:async id=>{const response=await api.delete(\"/policies/\".concat(id));return response.data;},acknowledge:async id=>{const response=await api.post(\"/policies/\".concat(id,\"/acknowledge\"));return response.data;},getStats:async()=>{const response=await api.get('/policies/stats');return response.data;}};// Quizzes API calls\nexport const quizzesAPI={getAll:async filters=>{const response=await api.get('/quizzes',{params:filters});return response.data;},getById:async id=>{const response=await api.get(\"/quizzes/\".concat(id));return response.data;},create:async quizData=>{const response=await api.post('/quizzes',quizData);return response.data;},update:async(id,quizData)=>{const response=await api.put(\"/quizzes/\".concat(id),quizData);return response.data;},delete:async id=>{const response=await api.delete(\"/quizzes/\".concat(id));return response.data;},startQuiz:async id=>{const response=await api.post(\"/quizzes/\".concat(id,\"/start\"));return response.data;},submitQuiz:async(id,answers)=>{const response=await api.post(\"/quizzes/\".concat(id,\"/attempt\"),{answers});return response.data;},getResults:async id=>{const response=await api.get(\"/quizzes/\".concat(id,\"/results\"));return response.data;}};// Games API calls\nexport const gamesAPI={getAll:async filters=>{const response=await api.get('/games',{params:filters});return response.data;},getById:async id=>{const response=await api.get(\"/games/\".concat(id));return response.data;},create:async gameData=>{const response=await api.post('/games',gameData);return response.data;},update:async(id,gameData)=>{const response=await api.put(\"/games/\".concat(id),gameData);return response.data;},delete:async id=>{const response=await api.delete(\"/games/\".concat(id));return response.data;},startGame:async id=>{const response=await api.post(\"/games/\".concat(id,\"/start\"));return response.data;},submitGame:async(id,gameData)=>{const response=await api.post(\"/games/\".concat(id,\"/attempt\"),gameData);return response.data;},getResults:async id=>{const response=await api.get(\"/games/\".concat(id,\"/results\"));return response.data;},getHistory:async()=>{const response=await api.get('/games/history');return response.data;},getLeaderboard:async gameId=>{const response=await api.get(\"/games/\".concat(gameId,\"/leaderboard\"));return response.data;}};// Training API calls\nexport const trainingAPI={getAll:async()=>{const response=await api.get('/training');return response.data;},getById:async id=>{const response=await api.get(\"/training/\".concat(id));return response.data;},create:async trainingData=>{const response=await api.post('/training',trainingData);return response.data;},update:async(id,trainingData)=>{const response=await api.put(\"/training/\".concat(id),trainingData);return response.data;},delete:async id=>{const response=await api.delete(\"/training/\".concat(id));return response.data;},startTraining:async id=>{const response=await api.post(\"/training/\".concat(id,\"/start\"));return response.data;},updateProgress:async(id,progressData)=>{const response=await api.put(\"/training/\".concat(id,\"/progress\"),progressData);return response.data;},completeTraining:async id=>{const response=await api.post(\"/training/\".concat(id,\"/complete\"));return response.data;},getProgress:async()=>{const response=await api.get('/training/progress');return response.data;}};// Reports API calls\nexport const reportsAPI={getDashboardStats:async()=>{const response=await api.get('/reports/dashboard');return response.data;},getComplianceReport:async filters=>{const response=await api.get('/reports/compliance',{params:filters});return response.data;},getTrainingProgressReport:async filters=>{const response=await api.get('/reports/training-progress',{params:filters});return response.data;},getQuizPerformanceReport:async filters=>{const response=await api.get('/reports/quiz-performance',{params:filters});return response.data;},getPolicyAcknowledgmentReport:async filters=>{const response=await api.get('/reports/policy-acknowledgments',{params:filters});return response.data;},exportReport:async(reportType,format,filters)=>{const response=await api.post('/reports/export',{reportType,format,filters});return response.data;}};// Facts API calls\nexport const factsAPI={getAll:async filters=>{const response=await api.get('/facts',{params:filters});return response.data;},getById:async id=>{const response=await api.get(\"/facts/\".concat(id));return response.data;},create:async factData=>{const response=await api.post('/facts',factData);return response.data;},update:async(id,factData)=>{const response=await api.put(\"/facts/\".concat(id),factData);return response.data;},delete:async id=>{const response=await api.delete(\"/facts/\".concat(id));return response.data;},getRandom:async()=>{const response=await api.get('/facts/random');return response.data;},getCategories:async()=>{const response=await api.get('/facts/categories');return response.data;},getByCategory:async category=>{const response=await api.get(\"/facts/category/\".concat(category));return response.data;}};// Profile API calls\nexport const profileAPI={getProfile:async()=>{const response=await api.get('/profile');return response.data;},updateProfile:async profileData=>{const response=await api.put('/profile',profileData);return response.data;},changePassword:async passwordData=>{const response=await api.put('/profile/password',passwordData);return response.data;},getPreferences:async()=>{const response=await api.get('/profile/preferences');return response.data;},updatePreferences:async preferences=>{const response=await api.put('/profile/preferences',preferences);return response.data;},getActivityHistory:async()=>{const response=await api.get('/profile/activity');return response.data;},toggleMFA:async()=>{const response=await api.put('/profile/mfa');return response.data;},getUserStats:async()=>{const response=await api.get('/profile/stats');return response.data;}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","data","logout","getProfile","get","register","userData","updateProfile","profileData","put","changePassword","passwordData","policiesAPI","getAll","filters","params","getById","id","policyData","update","delete","acknowledge","getStats","quizzesAPI","quizData","startQuiz","submitQuiz","answers","getResults","gamesAPI","gameData","startGame","submitGame","getHistory","getLeaderboard","gameId","trainingAPI","trainingData","startTraining","updateProgress","progressData","completeTraining","getProgress","reportsAPI","getDashboardStats","getComplianceReport","getTrainingProgressReport","getQuizPerformanceReport","getPolicyAcknowledgmentReport","exportReport","reportType","format","factsAPI","factData","getRandom","getCategories","getByCategory","category","profileAPI","getPreferences","updatePreferences","preferences","getActivityHistory","toggleMFA","getUserStats"],"sources":["C:/Users/ranas/Desktop/project/apps/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('authToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  logout: async () => {\r\n    const response = await api.post('/auth/logout');\r\n    return response.data;\r\n  },\r\n\r\n  getProfile: async () => {\r\n    const response = await api.get('/auth/profile');\r\n    return response.data;\r\n  },\r\n\r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  updateProfile: async (profileData) => {\r\n    const response = await api.put('/auth/profile', profileData);\r\n    return response.data;\r\n  },\r\n\r\n  changePassword: async (passwordData) => {\r\n    const response = await api.put('/auth/change-password', passwordData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Policies API calls\r\nexport const policiesAPI = {\r\n  getAll: async (filters) => {\r\n    const response = await api.get('/policies', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id) => {\r\n    const response = await api.get(`/policies/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (policyData) => {\r\n    const response = await api.post('/policies', policyData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, policyData) => {\r\n    const response = await api.put(`/policies/${id}`, policyData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/policies/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  acknowledge: async (id) => {\r\n    const response = await api.post(`/policies/${id}/acknowledge`);\r\n    return response.data;\r\n  },\r\n\r\n  getStats: async () => {\r\n    const response = await api.get('/policies/stats');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Quizzes API calls\r\nexport const quizzesAPI = {\r\n  getAll: async (filters) => {\r\n    const response = await api.get('/quizzes', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id) => {\r\n    const response = await api.get(`/quizzes/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (quizData) => {\r\n    const response = await api.post('/quizzes', quizData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, quizData) => {\r\n    const response = await api.put(`/quizzes/${id}`, quizData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/quizzes/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  startQuiz: async (id) => {\r\n    const response = await api.post(`/quizzes/${id}/start`);\r\n    return response.data;\r\n  },\r\n\r\n  submitQuiz: async (id, answers) => {\r\n    const response = await api.post(`/quizzes/${id}/attempt`, { answers });\r\n    return response.data;\r\n  },\r\n\r\n  getResults: async (id) => {\r\n    const response = await api.get(`/quizzes/${id}/results`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Games API calls\r\nexport const gamesAPI = {\r\n  getAll: async (filters) => {\r\n    const response = await api.get('/games', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id) => {\r\n    const response = await api.get(`/games/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (gameData) => {\r\n    const response = await api.post('/games', gameData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, gameData) => {\r\n    const response = await api.put(`/games/${id}`, gameData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/games/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  startGame: async (id) => {\r\n    const response = await api.post(`/games/${id}/start`);\r\n    return response.data;\r\n  },\r\n\r\n  submitGame: async (id, gameData) => {\r\n    const response = await api.post(`/games/${id}/attempt`, gameData);\r\n    return response.data;\r\n  },\r\n\r\n  getResults: async (id) => {\r\n    const response = await api.get(`/games/${id}/results`);\r\n    return response.data;\r\n  },\r\n\r\n  getHistory: async () => {\r\n    const response = await api.get('/games/history');\r\n    return response.data;\r\n  },\r\n\r\n  getLeaderboard: async (gameId) => {\r\n    const response = await api.get(`/games/${gameId}/leaderboard`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Training API calls\r\nexport const trainingAPI = {\r\n  getAll: async () => {\r\n    const response = await api.get('/training');\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id) => {\r\n    const response = await api.get(`/training/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (trainingData) => {\r\n    const response = await api.post('/training', trainingData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, trainingData) => {\r\n    const response = await api.put(`/training/${id}`, trainingData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/training/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  startTraining: async (id) => {\r\n    const response = await api.post(`/training/${id}/start`);\r\n    return response.data;\r\n  },\r\n\r\n  updateProgress: async (id, progressData) => {\r\n    const response = await api.put(`/training/${id}/progress`, progressData);\r\n    return response.data;\r\n  },\r\n\r\n  completeTraining: async (id) => {\r\n    const response = await api.post(`/training/${id}/complete`);\r\n    return response.data;\r\n  },\r\n\r\n  getProgress: async () => {\r\n    const response = await api.get('/training/progress');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Reports API calls\r\nexport const reportsAPI = {\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/reports/dashboard');\r\n    return response.data;\r\n  },\r\n\r\n  getComplianceReport: async (filters) => {\r\n    const response = await api.get('/reports/compliance', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getTrainingProgressReport: async (filters) => {\r\n    const response = await api.get('/reports/training-progress', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getQuizPerformanceReport: async (filters) => {\r\n    const response = await api.get('/reports/quiz-performance', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getPolicyAcknowledgmentReport: async (filters) => {\r\n    const response = await api.get('/reports/policy-acknowledgments', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  exportReport: async (reportType, format, filters) => {\r\n    const response = await api.post('/reports/export', {\r\n      reportType,\r\n      format,\r\n      filters\r\n    });\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Facts API calls\r\nexport const factsAPI = {\r\n  getAll: async (filters) => {\r\n    const response = await api.get('/facts', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id) => {\r\n    const response = await api.get(`/facts/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (factData) => {\r\n    const response = await api.post('/facts', factData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, factData) => {\r\n    const response = await api.put(`/facts/${id}`, factData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/facts/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getRandom: async () => {\r\n    const response = await api.get('/facts/random');\r\n    return response.data;\r\n  },\r\n\r\n  getCategories: async () => {\r\n    const response = await api.get('/facts/categories');\r\n    return response.data;\r\n  },\r\n\r\n  getByCategory: async (category) => {\r\n    const response = await api.get(`/facts/category/${category}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Profile API calls\r\nexport const profileAPI = {\r\n  getProfile: async () => {\r\n    const response = await api.get('/profile');\r\n    return response.data;\r\n  },\r\n\r\n  updateProfile: async (profileData) => {\r\n    const response = await api.put('/profile', profileData);\r\n    return response.data;\r\n  },\r\n\r\n  changePassword: async (passwordData) => {\r\n    const response = await api.put('/profile/password', passwordData);\r\n    return response.data;\r\n  },\r\n\r\n  getPreferences: async () => {\r\n    const response = await api.get('/profile/preferences');\r\n    return response.data;\r\n  },\r\n\r\n  updatePreferences: async (preferences) => {\r\n    const response = await api.put('/profile/preferences', preferences);\r\n    return response.data;\r\n  },\r\n\r\n  getActivityHistory: async () => {\r\n    const response = await api.get('/profile/activity');\r\n    return response.data;\r\n  },\r\n\r\n  toggleMFA: async () => {\r\n    const response = await api.put('/profile/mfa');\r\n    return response.data;\r\n  },\r\n\r\n  getUserStats: async () => {\r\n    const response = await api.get('/profile/stats');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}