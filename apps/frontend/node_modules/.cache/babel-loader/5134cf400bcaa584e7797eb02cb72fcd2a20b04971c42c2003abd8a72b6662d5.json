{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seniy\\\\Downloads\\\\project (1)\\\\project\\\\apps\\\\frontend\\\\src\\\\components\\\\dashboard\\\\ClassicDashboardWrapper.tsx\";\nimport React from 'react';\n// Import the previous dashboard app (renamed to App.old.jsx)\n// This allows us to render the classic dashboard within our current routing/layout\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore - importing JS module from TSX\nimport ClassicApp from '../../App.old.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassicDashboardWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(ClassicApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = ClassicDashboardWrapper;\nexport default ClassicDashboardWrapper;\nvar _c;\n$RefreshReg$(_c, \"ClassicDashboardWrapper\");","map":{"version":3,"names":["React","ClassicApp","jsxDEV","_jsxDEV","ClassicDashboardWrapper","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/components/dashboard/ClassicDashboardWrapper.tsx"],"sourcesContent":["import React from 'react';\r\n// Import the previous dashboard app (renamed to App.old.jsx)\r\n// This allows us to render the classic dashboard within our current routing/layout\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore - importing JS module from TSX\r\nimport ClassicApp from '../../App.old.jsx';\r\n\r\nconst ClassicDashboardWrapper: React.FC = () => {\r\n\treturn <ClassicApp />;\r\n};\r\n\r\nexport default ClassicDashboardWrapper;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA,OAAOC,UAAU,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,uBAAiC,GAAGA,CAAA,KAAM;EAC/C,oBAAOD,OAAA,CAACF,UAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACC,EAAA,GAFIL,uBAAiC;AAIvC,eAAeA,uBAAuB;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}