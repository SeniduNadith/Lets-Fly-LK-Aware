{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  // Backoff on 429 Too Many Requests\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429) {\n    var _error$response$heade;\n    const retryAfter = parseInt(((_error$response$heade = error.response.headers) === null || _error$response$heade === void 0 ? void 0 : _error$response$heade['retry-after']) || '1', 10);\n    const delayMs = Math.min((isNaN(retryAfter) ? 1 : retryAfter) * 1000, 5000);\n    return new Promise(resolve => setTimeout(resolve, delayMs)).then(() => {\n      return api.request(error.config);\n    });\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    // Token expired or invalid. Clear token, but do not hard-redirect to avoid SPA loops in demo mode.\n    localStorage.removeItem('authToken');\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  updateProfile: async profileData => {\n    const response = await api.put('/auth/profile', profileData);\n    return response.data;\n  },\n  changePassword: async passwordData => {\n    const response = await api.put('/auth/change-password', passwordData);\n    return response.data;\n  }\n};\n\n// Policies API calls\nexport const policiesAPI = {\n  getAll: async filters => {\n    const response = await api.get('/policies', {\n      params: filters\n    });\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/policies/${id}`);\n    return response.data;\n  },\n  create: async policyData => {\n    const response = await api.post('/policies', policyData);\n    return response.data;\n  },\n  update: async (id, policyData) => {\n    const response = await api.put(`/policies/${id}`, policyData);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/policies/${id}`);\n    return response.data;\n  },\n  acknowledge: async id => {\n    const response = await api.post(`/policies/${id}/acknowledge`);\n    return response.data;\n  },\n  getStats: async () => {\n    const response = await api.get('/policies/stats');\n    return response.data;\n  }\n};\n\n// Quizzes API calls\nexport const quizzesAPI = {\n  getAll: async filters => {\n    const response = await api.get('/quizzes', {\n      params: filters\n    });\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/quizzes/${id}`);\n    return response.data;\n  },\n  create: async quizData => {\n    const response = await api.post('/quizzes', quizData);\n    return response.data;\n  },\n  update: async (id, quizData) => {\n    const response = await api.put(`/quizzes/${id}`, quizData);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/quizzes/${id}`);\n    return response.data;\n  },\n  startQuiz: async id => {\n    const response = await api.post(`/quizzes/${id}/start`);\n    return response.data;\n  },\n  submitQuiz: async (id, answers) => {\n    const response = await api.post(`/quizzes/${id}/attempt`, {\n      answers\n    });\n    return response.data;\n  },\n  getResults: async id => {\n    const response = await api.get(`/quizzes/${id}/results`);\n    return response.data;\n  }\n};\n\n// Games API calls\nexport const gamesAPI = {\n  getAll: async filters => {\n    var _response$data;\n    const response = await api.get('/games', {\n      params: filters\n    });\n    return (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n  },\n  getById: async id => {\n    var _response$data2;\n    const response = await api.get(`/games/${id}`);\n    return (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data;\n  },\n  create: async gameData => {\n    const response = await api.post('/games', gameData);\n    return response.data;\n  },\n  update: async (id, gameData) => {\n    const response = await api.put(`/games/${id}`, gameData);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/games/${id}`);\n    return response.data;\n  },\n  startGame: async id => {\n    const response = await api.post(`/games/${id}/start`);\n    return response.data;\n  },\n  submitGame: async (id, gameData) => {\n    const response = await api.post(`/games/${id}/attempt`, gameData);\n    return response.data;\n  },\n  getResults: async id => {\n    const response = await api.get(`/games/${id}/results`);\n    return response.data;\n  },\n  getHistory: async () => {\n    const response = await api.get('/games/history');\n    return response.data;\n  },\n  getLeaderboard: async gameId => {\n    const response = await api.get(`/games/${gameId}/leaderboard`);\n    return response.data;\n  }\n};\n\n// Training API calls\nexport const trainingAPI = {\n  getAll: async () => {\n    var _response$data3;\n    const response = await api.get('/training');\n    return (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/training/${id}`);\n    return response.data;\n  },\n  create: async trainingData => {\n    // Map frontend form fields to backend schema\n    const payload = {\n      title: trainingData.title,\n      description: trainingData.description,\n      category: trainingData.category,\n      role_id: undefined,\n      // backend defaults in dev\n      content_type: 'interactive',\n      content_url: trainingData.content || '',\n      duration: trainingData.duration || 0,\n      prerequisites: []\n    };\n    const response = await api.post('/training', payload);\n    return response.data;\n  },\n  update: async (id, trainingData) => {\n    const response = await api.put(`/training/${id}`, trainingData);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/training/${id}`);\n    return response.data;\n  },\n  startTraining: async id => {\n    const response = await api.post(`/training/${id}/start`);\n    return response.data;\n  },\n  updateProgress: async (id, progressData) => {\n    const response = await api.put(`/training/${id}/progress`, progressData);\n    return response.data;\n  },\n  completeTraining: async id => {\n    const response = await api.post(`/training/${id}/complete`);\n    return response.data;\n  },\n  getProgress: async () => {\n    const response = await api.get('/training/progress');\n    return response.data;\n  }\n};\n\n// Reports API calls\nexport const reportsAPI = {\n  getDashboardStats: async () => {\n    const response = await api.get('/reports/dashboard');\n    return response.data;\n  },\n  getComplianceReport: async filters => {\n    const response = await api.get('/reports/compliance', {\n      params: filters\n    });\n    return response.data;\n  },\n  getTrainingProgressReport: async filters => {\n    const response = await api.get('/reports/training-progress', {\n      params: filters\n    });\n    return response.data;\n  },\n  getQuizPerformanceReport: async filters => {\n    const response = await api.get('/reports/quiz-performance', {\n      params: filters\n    });\n    return response.data;\n  },\n  getPolicyAcknowledgmentReport: async filters => {\n    const response = await api.get('/reports/policy-acknowledgments', {\n      params: filters\n    });\n    return response.data;\n  },\n  exportReport: async (reportType, format, filters) => {\n    const response = await api.post('/reports/export', {\n      reportType,\n      format,\n      filters\n    });\n    return response.data;\n  }\n};\n\n// Facts API calls\nexport const factsAPI = {\n  getAll: async filters => {\n    const response = await api.get('/facts', {\n      params: filters\n    });\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/facts/${id}`);\n    return response.data;\n  },\n  create: async factData => {\n    const response = await api.post('/facts', factData);\n    return response.data;\n  },\n  update: async (id, factData) => {\n    const response = await api.put(`/facts/${id}`, factData);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/facts/${id}`);\n    return response.data;\n  },\n  getRandom: async () => {\n    const response = await api.get('/facts/random');\n    return response.data;\n  },\n  getCategories: async () => {\n    const response = await api.get('/facts/categories');\n    return response.data;\n  },\n  getByCategory: async category => {\n    const response = await api.get(`/facts/category/${category}`);\n    return response.data;\n  }\n};\n\n// Profile API calls\nexport const profileAPI = {\n  getProfile: async () => {\n    const response = await api.get('/profile');\n    return response.data;\n  },\n  updateProfile: async profileData => {\n    const response = await api.put('/profile', profileData);\n    return response.data;\n  },\n  changePassword: async passwordData => {\n    const response = await api.put('/profile/password', passwordData);\n    return response.data;\n  },\n  getPreferences: async () => {\n    const response = await api.get('/profile/preferences');\n    return response.data;\n  },\n  updatePreferences: async preferences => {\n    const response = await api.put('/profile/preferences', preferences);\n    return response.data;\n  },\n  getActivityHistory: async () => {\n    const response = await api.get('/profile/activity');\n    return response.data;\n  },\n  toggleMFA: async () => {\n    const response = await api.put('/profile/mfa');\n    return response.data;\n  },\n  getUserStats: async () => {\n    const response = await api.get('/profile/stats');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","_error$response$heade","retryAfter","parseInt","delayMs","Math","min","isNaN","resolve","setTimeout","then","removeItem","authAPI","login","credentials","post","data","logout","getProfile","get","register","userData","updateProfile","profileData","put","changePassword","passwordData","policiesAPI","getAll","filters","params","getById","id","policyData","update","delete","acknowledge","getStats","quizzesAPI","quizData","startQuiz","submitQuiz","answers","getResults","gamesAPI","_response$data","_response$data2","gameData","startGame","submitGame","getHistory","getLeaderboard","gameId","trainingAPI","_response$data3","trainingData","payload","title","description","category","role_id","undefined","content_type","content_url","content","duration","prerequisites","startTraining","updateProgress","progressData","completeTraining","getProgress","reportsAPI","getDashboardStats","getComplianceReport","getTrainingProgressReport","getQuizPerformanceReport","getPolicyAcknowledgmentReport","exportReport","reportType","format","factsAPI","factData","getRandom","getCategories","getByCategory","profileAPI","getPreferences","updatePreferences","preferences","getActivityHistory","toggleMFA","getUserStats"],"sources":["C:/Users/ranas/Desktop/project/apps/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Backoff on 429 Too Many Requests\n    if (error.response?.status === 429) {\n      const retryAfter = parseInt(error.response.headers?.['retry-after'] || '1', 10);\n      const delayMs = Math.min((isNaN(retryAfter) ? 1 : retryAfter) * 1000, 5000);\n      return new Promise((resolve) => setTimeout(resolve, delayMs)).then(() => {\n        return api.request(error.config);\n      });\n    }\n\n    if (error.response?.status === 401) {\n      // Token expired or invalid. Clear token, but do not hard-redirect to avoid SPA loops in demo mode.\n      localStorage.removeItem('authToken');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await api.put('/auth/profile', profileData);\n    return response.data;\n  },\n\n  changePassword: async (passwordData) => {\n    const response = await api.put('/auth/change-password', passwordData);\n    return response.data;\n  },\n};\n\n// Policies API calls\nexport const policiesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/policies', { params: filters });\n    return response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/policies/${id}`);\n    return response.data;\n  },\n\n  create: async (policyData) => {\n    const response = await api.post('/policies', policyData);\n    return response.data;\n  },\n\n  update: async (id, policyData) => {\n    const response = await api.put(`/policies/${id}`, policyData);\n    return response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/policies/${id}`);\n    return response.data;\n  },\n\n  acknowledge: async (id) => {\n    const response = await api.post(`/policies/${id}/acknowledge`);\n    return response.data;\n  },\n\n  getStats: async () => {\n    const response = await api.get('/policies/stats');\n    return response.data;\n  },\n};\n\n// Quizzes API calls\nexport const quizzesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/quizzes', { params: filters });\n    return response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/quizzes/${id}`);\n    return response.data;\n  },\n\n  create: async (quizData) => {\n    const response = await api.post('/quizzes', quizData);\n    return response.data;\n  },\n\n  update: async (id, quizData) => {\n    const response = await api.put(`/quizzes/${id}`, quizData);\n    return response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/quizzes/${id}`);\n    return response.data;\n  },\n\n  startQuiz: async (id) => {\n    const response = await api.post(`/quizzes/${id}/start`);\n    return response.data;\n  },\n\n  submitQuiz: async (id, answers) => {\n    const response = await api.post(`/quizzes/${id}/attempt`, { answers });\n    return response.data;\n  },\n\n  getResults: async (id) => {\n    const response = await api.get(`/quizzes/${id}/results`);\n    return response.data;\n  },\n};\n\n// Games API calls\nexport const gamesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/games', { params: filters });\n    return response.data?.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/games/${id}`);\n    return response.data?.data;\n  },\n\n  create: async (gameData) => {\n    const response = await api.post('/games', gameData);\n    return response.data;\n  },\n\n  update: async (id, gameData) => {\n    const response = await api.put(`/games/${id}`, gameData);\n    return response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/games/${id}`);\n    return response.data;\n  },\n\n  startGame: async (id) => {\n    const response = await api.post(`/games/${id}/start`);\n    return response.data;\n  },\n\n  submitGame: async (id, gameData) => {\n    const response = await api.post(`/games/${id}/attempt`, gameData);\n    return response.data;\n  },\n\n  getResults: async (id) => {\n    const response = await api.get(`/games/${id}/results`);\n    return response.data;\n  },\n\n  getHistory: async () => {\n    const response = await api.get('/games/history');\n    return response.data;\n  },\n\n  getLeaderboard: async (gameId) => {\n    const response = await api.get(`/games/${gameId}/leaderboard`);\n    return response.data;\n  },\n};\n\n// Training API calls\nexport const trainingAPI = {\n  getAll: async () => {\n    const response = await api.get('/training');\n    return response.data?.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/training/${id}`);\n    return response.data;\n  },\n\n  create: async (trainingData) => {\n    // Map frontend form fields to backend schema\n    const payload = {\n      title: trainingData.title,\n      description: trainingData.description,\n      category: trainingData.category,\n      role_id: undefined, // backend defaults in dev\n      content_type: 'interactive',\n      content_url: trainingData.content || '',\n      duration: trainingData.duration || 0,\n      prerequisites: [],\n    };\n    const response = await api.post('/training', payload);\n    return response.data;\n  },\n\n  update: async (id, trainingData) => {\n    const response = await api.put(`/training/${id}`, trainingData);\n    return response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/training/${id}`);\n    return response.data;\n  },\n\n  startTraining: async (id) => {\n    const response = await api.post(`/training/${id}/start`);\n    return response.data;\n  },\n\n  updateProgress: async (id, progressData) => {\n    const response = await api.put(`/training/${id}/progress`, progressData);\n    return response.data;\n  },\n\n  completeTraining: async (id) => {\n    const response = await api.post(`/training/${id}/complete`);\n    return response.data;\n  },\n\n  getProgress: async () => {\n    const response = await api.get('/training/progress');\n    return response.data;\n  },\n};\n\n// Reports API calls\nexport const reportsAPI = {\n  getDashboardStats: async () => {\n    const response = await api.get('/reports/dashboard');\n    return response.data;\n  },\n\n  getComplianceReport: async (filters) => {\n    const response = await api.get('/reports/compliance', { params: filters });\n    return response.data;\n  },\n\n  getTrainingProgressReport: async (filters) => {\n    const response = await api.get('/reports/training-progress', { params: filters });\n    return response.data;\n  },\n\n  getQuizPerformanceReport: async (filters) => {\n    const response = await api.get('/reports/quiz-performance', { params: filters });\n    return response.data;\n  },\n\n  getPolicyAcknowledgmentReport: async (filters) => {\n    const response = await api.get('/reports/policy-acknowledgments', { params: filters });\n    return response.data;\n  },\n\n  exportReport: async (reportType, format, filters) => {\n    const response = await api.post('/reports/export', {\n      reportType,\n      format,\n      filters\n    });\n    return response.data;\n  },\n};\n\n// Facts API calls\nexport const factsAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/facts', { params: filters });\n    return response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/facts/${id}`);\n    return response.data;\n  },\n\n  create: async (factData) => {\n    const response = await api.post('/facts', factData);\n    return response.data;\n  },\n\n  update: async (id, factData) => {\n    const response = await api.put(`/facts/${id}`, factData);\n    return response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/facts/${id}`);\n    return response.data;\n  },\n\n  getRandom: async () => {\n    const response = await api.get('/facts/random');\n    return response.data;\n  },\n\n  getCategories: async () => {\n    const response = await api.get('/facts/categories');\n    return response.data;\n  },\n\n  getByCategory: async (category) => {\n    const response = await api.get(`/facts/category/${category}`);\n    return response.data;\n  },\n};\n\n// Profile API calls\nexport const profileAPI = {\n  getProfile: async () => {\n    const response = await api.get('/profile');\n    return response.data;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await api.put('/profile', profileData);\n    return response.data;\n  },\n\n  changePassword: async (passwordData) => {\n    const response = await api.put('/profile/password', passwordData);\n    return response.data;\n  },\n\n  getPreferences: async () => {\n    const response = await api.get('/profile/preferences');\n    return response.data;\n  },\n\n  updatePreferences: async (preferences) => {\n    const response = await api.put('/profile/preferences', preferences);\n    return response.data;\n  },\n\n  getActivityHistory: async () => {\n    const response = await api.get('/profile/activity');\n    return response.data;\n  },\n\n  toggleMFA: async () => {\n    const response = await api.put('/profile/mfa');\n    return response.data;\n  },\n\n  getUserStats: async () => {\n    const response = await api.get('/profile/stats');\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}