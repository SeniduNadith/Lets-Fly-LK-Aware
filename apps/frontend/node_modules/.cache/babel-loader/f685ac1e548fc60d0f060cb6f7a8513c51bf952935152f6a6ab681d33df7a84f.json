{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seniy\\\\Downloads\\\\project (1)\\\\project\\\\apps\\\\frontend\\\\src\\\\contexts\\\\SimpleAuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n\n    // Always try to hydrate from server if we have a token, to ensure latest role\n    const hydrate = async () => {\n      try {\n        if (token) {\n          const res = await fetch('/api/auth/profile', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (res.ok) {\n            const data = await res.json();\n            if (data !== null && data !== void 0 && data.user) {\n              setUser(data.user);\n              localStorage.setItem('user', JSON.stringify(data.user));\n            }\n          }\n        }\n      } catch (e) {\n        // ignore\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (token) {\n      hydrate();\n    } else if (storedUser) {\n      setUser(JSON.parse(storedUser));\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Simple login function\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      const userData = response.data.user;\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', response.data.token);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Please check your credentials.'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated: !!user,\n      loading,\n      login,\n      logout\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","storedUser","localStorage","getItem","token","hydrate","res","fetch","headers","Authorization","ok","data","json","setItem","JSON","stringify","e","parse","login","username","password","response","post","userData","success","error","_error$response","_error$response$data","console","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/contexts/SimpleAuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('authToken') || localStorage.getItem('token');\n\n    // Always try to hydrate from server if we have a token, to ensure latest role\n    const hydrate = async () => {\n      try {\n        if (token) {\n          const res = await fetch('/api/auth/profile', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          if (res.ok) {\n            const data = await res.json();\n            if (data?.user) {\n              setUser(data.user);\n              localStorage.setItem('user', JSON.stringify(data.user));\n            }\n          }\n        }\n      } catch (e) {\n        // ignore\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (token) {\n      hydrate();\n    } else if (storedUser) {\n      setUser(JSON.parse(storedUser));\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Simple login function\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      \n      const userData = response.data.user;\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', response.data.token);\n      return { success: true };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return { \n        success: false, \n        error: error.response?.data?.error || 'Login failed. Please check your credentials.'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      user, \n      isAuthenticated: !!user,\n      loading,\n      login,\n      logout \n    }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAEhF;IACA,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,IAAID,KAAK,EAAE;UACT,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;YAC3CC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUL,KAAK;YAAG;UAC9C,CAAC,CAAC;UACF,IAAIE,GAAG,CAACI,EAAE,EAAE;YACV,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;YAC7B,IAAID,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEf,IAAI,EAAE;cACdC,OAAO,CAACc,IAAI,CAACf,IAAI,CAAC;cAClBM,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAACf,IAAI,CAAC,CAAC;YACzD;UACF;QACF;MACF,CAAC,CAAC,OAAOoB,CAAC,EAAE;QACV;MAAA,CACD,SAAS;QACRjB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACD,IAAIK,KAAK,EAAE;MACTC,OAAO,CAAC,CAAC;IACX,CAAC,MAAM,IAAIJ,UAAU,EAAE;MACrBJ,OAAO,CAACiB,IAAI,CAACG,KAAK,CAAChB,UAAU,CAAC,CAAC;MAC/BF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMmB,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,iBAAiB,EAAE;QACnDH,QAAQ;QACRC;MACF,CAAC,CAAC;MAEF,MAAMG,QAAQ,GAAGF,QAAQ,CAACV,IAAI,CAACf,IAAI;MACnCC,OAAO,CAAC0B,QAAQ,CAAC;MACjBrB,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACQ,QAAQ,CAAC,CAAC;MACtDrB,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEQ,QAAQ,CAACV,IAAI,CAACP,KAAK,CAAC;MAClD,OAAO;QAAEoB,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO;QACLD,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBf,IAAI,cAAAgB,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI;MACxC,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBhC,OAAO,CAAC,IAAI,CAAC;IACbK,YAAY,CAAC4B,UAAU,CAAC,MAAM,CAAC;IAC/B5B,YAAY,CAAC4B,UAAU,CAAC,OAAO,CAAC;IAChC9B,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACuC,QAAQ;IAACC,KAAK,EAAE;MAC3BpC,IAAI;MACJqC,eAAe,EAAE,CAAC,CAACrC,IAAI;MACvBE,OAAO;MACPoB,KAAK;MACLW;IACF,CAAE;IAAAnC,QAAA,EACC,CAACI,OAAO,IAAIJ;EAAQ;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC1C,EAAA,CAlFWF,YAAY;EAAA,QAGNL,WAAW;AAAA;AAAAkD,EAAA,GAHjB7C,YAAY;AAoFzB,OAAO,MAAM8C,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxD,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACiD,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}