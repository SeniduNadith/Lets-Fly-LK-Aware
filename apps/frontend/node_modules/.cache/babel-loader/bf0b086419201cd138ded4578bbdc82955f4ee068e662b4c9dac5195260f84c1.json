{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seniy\\\\Downloads\\\\project (1)\\\\project\\\\apps\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const isAuthenticated = !!user;\n\n  // Check for existing session on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await axios.get('/api/auth/profile');\n          setUser(response.data.user);\n        } else {\n          // Development mode: Set a demo user if no token exists\n          const isDevelopment = process.env.NODE_ENV === 'development';\n          if (isDevelopment) {\n            setUser({\n              id: 1,\n              username: 'demo',\n              email: 'demo@dynamicbiz.com',\n              first_name: 'Demo',\n              last_name: 'User',\n              role_id: 1,\n              role: 'enduser',\n              role_name: 'End User',\n              department: 'IT',\n              is_active: true,\n              mfa_enabled: false,\n              last_login: new Date().toISOString(),\n              created_at: new Date().toISOString()\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n\n        // Development mode: Set a demo user even if auth fails\n        const isDevelopment = process.env.NODE_ENV === 'development';\n        if (isDevelopment) {\n          setUser({\n            id: 1,\n            username: 'demo',\n            email: 'demo@dynamicbiz.com',\n            first_name: 'Demo',\n            last_name: 'User',\n            role_id: 1,\n            role: 'enduser',\n            role_name: 'End User',\n            department: 'IT',\n            is_active: true,\n            mfa_enabled: false,\n            last_login: new Date().toISOString(),\n            created_at: new Date().toISOString()\n          });\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (username, password, mfaToken) => {\n    try {\n      setIsLoading(true);\n      const requestData = {\n        username,\n        password\n      };\n      if (mfaToken) {\n        requestData.mfaToken = mfaToken;\n      }\n      const response = await axios.post('/api/auth/login', requestData);\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store token and set default header\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(userData);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login failed:', error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const updateProfile = async data => {\n    try {\n      const response = await axios.put('/api/auth/profile', data);\n      setUser(response.data.user);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Profile update failed:', error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Profile update failed');\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Password change failed:', error);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Password change failed');\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    updateProfile,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","isAuthenticated","checkAuth","token","localStorage","getItem","defaults","headers","common","response","get","data","isDevelopment","process","env","NODE_ENV","id","username","email","first_name","last_name","role_id","role","role_name","department","is_active","mfa_enabled","last_login","Date","toISOString","created_at","error","console","removeItem","login","password","mfaToken","requestData","post","userData","setItem","_error$response","_error$response$data","Error","logout","updateProfile","put","_error$response2","_error$response2$data","changePassword","currentPassword","newPassword","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role_id: number;\r\n  role: string;\r\n  role_name?: string;\r\n  department: string;\r\n  is_active: boolean;\r\n  mfa_enabled: boolean;\r\n  last_login?: string;\r\n  created_at?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (username: string, password: string, mfaToken?: string) => Promise<void>;\r\n  logout: () => void;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n  changePassword: (currentPassword: string, newPassword: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  // Check for existing session on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          const response = await axios.get('/api/auth/profile');\r\n          setUser(response.data.user);\r\n        } else {\r\n          // Development mode: Set a demo user if no token exists\r\n          const isDevelopment = process.env.NODE_ENV === 'development';\r\n          if (isDevelopment) {\r\n            setUser({\r\n              id: 1,\r\n              username: 'demo',\r\n              email: 'demo@dynamicbiz.com',\r\n              first_name: 'Demo',\r\n              last_name: 'User',\r\n              role_id: 1,\r\n              role: 'enduser',\r\n              role_name: 'End User',\r\n              department: 'IT',\r\n              is_active: true,\r\n              mfa_enabled: false,\r\n              last_login: new Date().toISOString(),\r\n              created_at: new Date().toISOString()\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        \r\n        // Development mode: Set a demo user even if auth fails\r\n        const isDevelopment = process.env.NODE_ENV === 'development';\r\n        if (isDevelopment) {\r\n          setUser({\r\n            id: 1,\r\n            username: 'demo',\r\n            email: 'demo@dynamicbiz.com',\r\n            first_name: 'Demo',\r\n            last_name: 'User',\r\n            role_id: 1,\r\n            role: 'enduser',\r\n            role_name: 'End User',\r\n            department: 'IT',\r\n            is_active: true,\r\n            mfa_enabled: false,\r\n            last_login: new Date().toISOString(),\r\n            created_at: new Date().toISOString()\r\n          });\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string, mfaToken?: string): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      const requestData: any = {\r\n        username,\r\n        password\r\n      };\r\n      \r\n      if (mfaToken) {\r\n        requestData.mfaToken = mfaToken;\r\n      }\r\n      \r\n      const response = await axios.post('/api/auth/login', requestData);\r\n\r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token and set default header\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(userData);\r\n    } catch (error: any) {\r\n      console.error('Login failed:', error);\r\n      throw new Error(error.response?.data?.error || 'Login failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = (): void => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>): Promise<void> => {\r\n    try {\r\n      const response = await axios.put('/api/auth/profile', data);\r\n      setUser(response.data.user);\r\n    } catch (error: any) {\r\n      console.error('Profile update failed:', error);\r\n      throw new Error(error.response?.data?.error || 'Profile update failed');\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword: string, newPassword: string): Promise<void> => {\r\n    try {\r\n      await axios.put('/api/auth/change-password', {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Password change failed:', error);\r\n      throw new Error(error.response?.data?.error || 'Password change failed');\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    changePassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}