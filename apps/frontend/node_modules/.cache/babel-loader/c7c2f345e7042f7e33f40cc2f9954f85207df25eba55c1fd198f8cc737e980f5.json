{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  // Backoff on 429 Too Many Requests\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429) {\n    var _error$response$heade;\n    const retryAfter = parseInt(((_error$response$heade = error.response.headers) === null || _error$response$heade === void 0 ? void 0 : _error$response$heade['retry-after']) || '1', 10);\n    const delayMs = Math.min((isNaN(retryAfter) ? 1 : retryAfter) * 1000, 5000);\n    return new Promise(resolve => setTimeout(resolve, delayMs)).then(() => {\n      return api.request(error.config);\n    });\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    // Token expired or invalid. Clear token, but do not hard-redirect to avoid SPA loops in demo mode.\n    localStorage.removeItem('authToken');\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  updateProfile: async profileData => {\n    const response = await api.put('/auth/profile', profileData);\n    return response.data;\n  },\n  changePassword: async passwordData => {\n    const response = await api.put('/auth/change-password', passwordData);\n    return response.data;\n  }\n};\n\n// Policies API calls\nexport const policiesAPI = {\n  getAll: async filters => {\n    var _response$data;\n    const response = await api.get('/policies', {\n      params: filters\n    });\n    return ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || response.data;\n  },\n  getById: async id => {\n    var _response$data2;\n    const response = await api.get(`/policies/${id}`);\n    return ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data) || response.data;\n  },\n  create: async policyData => {\n    var _response$data3;\n    const response = await api.post('/policies', policyData);\n    return ((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data) || response.data;\n  },\n  update: async (id, policyData) => {\n    var _response$data4;\n    const response = await api.put(`/policies/${id}`, policyData);\n    return ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data) || response.data;\n  },\n  delete: async id => {\n    var _response$data5;\n    const response = await api.delete(`/policies/${id}`);\n    return ((_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.data) || response.data;\n  },\n  acknowledge: async id => {\n    var _response$data6;\n    const response = await api.post(`/policies/${id}/acknowledge`);\n    return ((_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : _response$data6.data) || response.data;\n  },\n  getStats: async () => {\n    var _response$data7;\n    const response = await api.get('/policies/stats');\n    return ((_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : _response$data7.data) || response.data;\n  }\n};\n\n// Quizzes API calls\nexport const quizzesAPI = {\n  getAll: async filters => {\n    var _response$data8;\n    const response = await api.get('/quizzes', {\n      params: filters\n    });\n    return ((_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : _response$data8.data) || response.data;\n  },\n  getById: async id => {\n    var _response$data9;\n    const response = await api.get(`/quizzes/${id}`);\n    return ((_response$data9 = response.data) === null || _response$data9 === void 0 ? void 0 : _response$data9.data) || response.data;\n  },\n  create: async quizData => {\n    var _response$data0;\n    const response = await api.post('/quizzes', quizData);\n    return ((_response$data0 = response.data) === null || _response$data0 === void 0 ? void 0 : _response$data0.data) || response.data;\n  },\n  update: async (id, quizData) => {\n    var _response$data1;\n    const response = await api.put(`/quizzes/${id}`, quizData);\n    return ((_response$data1 = response.data) === null || _response$data1 === void 0 ? void 0 : _response$data1.data) || response.data;\n  },\n  delete: async id => {\n    var _response$data10;\n    const response = await api.delete(`/quizzes/${id}`);\n    return ((_response$data10 = response.data) === null || _response$data10 === void 0 ? void 0 : _response$data10.data) || response.data;\n  },\n  startQuiz: async id => {\n    var _response$data11;\n    const response = await api.post(`/quizzes/${id}/start`);\n    return ((_response$data11 = response.data) === null || _response$data11 === void 0 ? void 0 : _response$data11.data) || response.data;\n  },\n  submitQuiz: async (id, answers) => {\n    var _response$data12;\n    const response = await api.post(`/quizzes/${id}/attempt`, {\n      answers\n    });\n    return ((_response$data12 = response.data) === null || _response$data12 === void 0 ? void 0 : _response$data12.data) || response.data;\n  },\n  getResults: async id => {\n    var _response$data13;\n    const response = await api.get(`/quizzes/${id}/results`);\n    return ((_response$data13 = response.data) === null || _response$data13 === void 0 ? void 0 : _response$data13.data) || response.data;\n  },\n  clearIncompleteAttempts: async () => {\n    var _response$data14;\n    const response = await api.delete('/quizzes/clear-incomplete');\n    return ((_response$data14 = response.data) === null || _response$data14 === void 0 ? void 0 : _response$data14.data) || response.data;\n  }\n};\n\n// Games API calls\nexport const gamesAPI = {\n  getAll: async filters => {\n    var _response$data15;\n    const response = await api.get('/games', {\n      params: filters\n    });\n    return ((_response$data15 = response.data) === null || _response$data15 === void 0 ? void 0 : _response$data15.data) || response.data;\n  },\n  getById: async id => {\n    var _response$data16;\n    const response = await api.get(`/games/${id}`);\n    return ((_response$data16 = response.data) === null || _response$data16 === void 0 ? void 0 : _response$data16.data) || response.data;\n  },\n  create: async gameData => {\n    var _response$data17;\n    const response = await api.post('/games', gameData);\n    return ((_response$data17 = response.data) === null || _response$data17 === void 0 ? void 0 : _response$data17.data) || response.data;\n  },\n  update: async (id, gameData) => {\n    var _response$data18;\n    const response = await api.put(`/games/${id}`, gameData);\n    return ((_response$data18 = response.data) === null || _response$data18 === void 0 ? void 0 : _response$data18.data) || response.data;\n  },\n  delete: async id => {\n    var _response$data19;\n    const response = await api.delete(`/games/${id}`);\n    return ((_response$data19 = response.data) === null || _response$data19 === void 0 ? void 0 : _response$data19.data) || response.data;\n  },\n  startGame: async id => {\n    var _response$data20;\n    const response = await api.post(`/games/${id}/start`);\n    return ((_response$data20 = response.data) === null || _response$data20 === void 0 ? void 0 : _response$data20.data) || response.data;\n  },\n  submitGame: async (id, gameData) => {\n    var _response$data21;\n    const response = await api.post(`/games/${id}/attempt`, gameData);\n    return ((_response$data21 = response.data) === null || _response$data21 === void 0 ? void 0 : _response$data21.data) || response.data;\n  },\n  getResults: async id => {\n    var _response$data22;\n    const response = await api.get(`/games/${id}/results`);\n    return ((_response$data22 = response.data) === null || _response$data22 === void 0 ? void 0 : _response$data22.data) || response.data;\n  },\n  getHistory: async () => {\n    var _response$data23;\n    const response = await api.get('/games/history');\n    return ((_response$data23 = response.data) === null || _response$data23 === void 0 ? void 0 : _response$data23.data) || response.data;\n  },\n  getLeaderboard: async gameId => {\n    var _response$data24;\n    const response = await api.get(`/games/${gameId}/leaderboard`);\n    return ((_response$data24 = response.data) === null || _response$data24 === void 0 ? void 0 : _response$data24.data) || response.data;\n  }\n};\n\n// Training API calls\nexport const trainingAPI = {\n  getAll: async () => {\n    var _response$data25;\n    const response = await api.get('/training');\n    return ((_response$data25 = response.data) === null || _response$data25 === void 0 ? void 0 : _response$data25.data) || response.data;\n  },\n  getById: async id => {\n    var _response$data26;\n    const response = await api.get(`/training/${id}`);\n    return ((_response$data26 = response.data) === null || _response$data26 === void 0 ? void 0 : _response$data26.data) || response.data;\n  },\n  create: async trainingData => {\n    var _response$data27;\n    // Map frontend form fields to backend schema\n    const payload = {\n      title: trainingData.title,\n      description: trainingData.description,\n      category: trainingData.category,\n      role_id: undefined,\n      // backend defaults in dev\n      content_type: 'interactive',\n      content_url: trainingData.content || '',\n      duration: trainingData.duration || 0,\n      prerequisites: []\n    };\n    const response = await api.post('/training', payload);\n    return ((_response$data27 = response.data) === null || _response$data27 === void 0 ? void 0 : _response$data27.data) || response.data;\n  },\n  update: async (id, trainingData) => {\n    var _response$data28;\n    const response = await api.put(`/training/${id}`, trainingData);\n    return ((_response$data28 = response.data) === null || _response$data28 === void 0 ? void 0 : _response$data28.data) || response.data;\n  },\n  delete: async id => {\n    var _response$data29;\n    const response = await api.delete(`/training/${id}`);\n    return ((_response$data29 = response.data) === null || _response$data29 === void 0 ? void 0 : _response$data29.data) || response.data;\n  },\n  startTraining: async id => {\n    var _response$data30;\n    const response = await api.post(`/training/${id}/start`);\n    return ((_response$data30 = response.data) === null || _response$data30 === void 0 ? void 0 : _response$data30.data) || response.data;\n  },\n  updateProgress: async (id, progressData) => {\n    var _response$data31;\n    const response = await api.put(`/training/${id}/progress`, progressData);\n    return ((_response$data31 = response.data) === null || _response$data31 === void 0 ? void 0 : _response$data31.data) || response.data;\n  },\n  completeTraining: async id => {\n    var _response$data32;\n    const response = await api.post(`/training/${id}/complete`);\n    return ((_response$data32 = response.data) === null || _response$data32 === void 0 ? void 0 : _response$data32.data) || response.data;\n  },\n  getProgress: async () => {\n    var _response$data33;\n    const response = await api.get('/training/progress');\n    return ((_response$data33 = response.data) === null || _response$data33 === void 0 ? void 0 : _response$data33.data) || response.data;\n  }\n};\n\n// Reports API calls\nexport const reportsAPI = {\n  getDashboardStats: async () => {\n    var _response$data34;\n    const response = await api.get('/reports/dashboard');\n    return ((_response$data34 = response.data) === null || _response$data34 === void 0 ? void 0 : _response$data34.data) || response.data;\n  },\n  getComplianceReport: async filters => {\n    var _response$data35;\n    const response = await api.get('/reports/compliance', {\n      params: filters\n    });\n    return ((_response$data35 = response.data) === null || _response$data35 === void 0 ? void 0 : _response$data35.data) || response.data;\n  },\n  getTrainingProgressReport: async filters => {\n    var _response$data36;\n    const response = await api.get('/reports/training-progress', {\n      params: filters\n    });\n    return ((_response$data36 = response.data) === null || _response$data36 === void 0 ? void 0 : _response$data36.data) || response.data;\n  },\n  getQuizPerformanceReport: async filters => {\n    var _response$data37;\n    const response = await api.get('/reports/quiz-performance', {\n      params: filters\n    });\n    return ((_response$data37 = response.data) === null || _response$data37 === void 0 ? void 0 : _response$data37.data) || response.data;\n  },\n  getPolicyAcknowledgmentReport: async filters => {\n    var _response$data38;\n    const response = await api.get('/reports/policy-acknowledgments', {\n      params: filters\n    });\n    return ((_response$data38 = response.data) === null || _response$data38 === void 0 ? void 0 : _response$data38.data) || response.data;\n  },\n  exportReport: async (reportType, format, filters) => {\n    var _response$data39;\n    const response = await api.post('/reports/export', {\n      reportType,\n      format,\n      filters\n    });\n    return ((_response$data39 = response.data) === null || _response$data39 === void 0 ? void 0 : _response$data39.data) || response.data;\n  }\n};\n\n// Facts API calls\nexport const factsAPI = {\n  getAll: async filters => {\n    var _response$data40;\n    const response = await api.get('/facts', {\n      params: filters\n    });\n    return ((_response$data40 = response.data) === null || _response$data40 === void 0 ? void 0 : _response$data40.data) || response.data;\n  },\n  getById: async id => {\n    var _response$data41;\n    const response = await api.get(`/facts/${id}`);\n    return ((_response$data41 = response.data) === null || _response$data41 === void 0 ? void 0 : _response$data41.data) || response.data;\n  },\n  create: async factData => {\n    var _response$data42;\n    const response = await api.post('/facts', factData);\n    return ((_response$data42 = response.data) === null || _response$data42 === void 0 ? void 0 : _response$data42.data) || response.data;\n  },\n  update: async (id, factData) => {\n    var _response$data43;\n    const response = await api.put(`/facts/${id}`, factData);\n    return ((_response$data43 = response.data) === null || _response$data43 === void 0 ? void 0 : _response$data43.data) || response.data;\n  },\n  delete: async id => {\n    var _response$data44;\n    const response = await api.delete(`/facts/${id}`);\n    return ((_response$data44 = response.data) === null || _response$data44 === void 0 ? void 0 : _response$data44.data) || response.data;\n  },\n  getRandom: async () => {\n    var _response$data45;\n    const response = await api.get('/facts/random');\n    return ((_response$data45 = response.data) === null || _response$data45 === void 0 ? void 0 : _response$data45.data) || response.data;\n  },\n  getCategories: async () => {\n    var _response$data46;\n    const response = await api.get('/facts/categories');\n    return ((_response$data46 = response.data) === null || _response$data46 === void 0 ? void 0 : _response$data46.data) || response.data;\n  },\n  getByCategory: async category => {\n    var _response$data47;\n    const response = await api.get(`/facts/category/${category}`);\n    return ((_response$data47 = response.data) === null || _response$data47 === void 0 ? void 0 : _response$data47.data) || response.data;\n  }\n};\n\n// Profile API calls\nexport const profileAPI = {\n  getProfile: async () => {\n    var _response$data48;\n    const response = await api.get('/profile');\n    return ((_response$data48 = response.data) === null || _response$data48 === void 0 ? void 0 : _response$data48.data) || response.data;\n  },\n  updateProfile: async profileData => {\n    var _response$data49;\n    const response = await api.put('/profile', profileData);\n    return ((_response$data49 = response.data) === null || _response$data49 === void 0 ? void 0 : _response$data49.data) || response.data;\n  },\n  changePassword: async passwordData => {\n    var _response$data50;\n    const response = await api.put('/profile/password', passwordData);\n    return ((_response$data50 = response.data) === null || _response$data50 === void 0 ? void 0 : _response$data50.data) || response.data;\n  },\n  getPreferences: async () => {\n    var _response$data51;\n    const response = await api.get('/profile/preferences');\n    return ((_response$data51 = response.data) === null || _response$data51 === void 0 ? void 0 : _response$data51.data) || response.data;\n  },\n  updatePreferences: async preferences => {\n    var _response$data52;\n    const response = await api.put('/profile/preferences', preferences);\n    return ((_response$data52 = response.data) === null || _response$data52 === void 0 ? void 0 : _response$data52.data) || response.data;\n  },\n  getActivityHistory: async () => {\n    var _response$data53;\n    const response = await api.get('/profile/activity');\n    return ((_response$data53 = response.data) === null || _response$data53 === void 0 ? void 0 : _response$data53.data) || response.data;\n  },\n  toggleMFA: async () => {\n    var _response$data54;\n    const response = await api.put('/profile/mfa');\n    return ((_response$data54 = response.data) === null || _response$data54 === void 0 ? void 0 : _response$data54.data) || response.data;\n  },\n  getUserStats: async () => {\n    var _response$data55;\n    const response = await api.get('/profile/stats');\n    return ((_response$data55 = response.data) === null || _response$data55 === void 0 ? void 0 : _response$data55.data) || response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","_error$response$heade","retryAfter","parseInt","delayMs","Math","min","isNaN","resolve","setTimeout","then","removeItem","authAPI","login","credentials","post","data","logout","getProfile","get","register","userData","updateProfile","profileData","put","changePassword","passwordData","policiesAPI","getAll","filters","_response$data","params","getById","id","_response$data2","policyData","_response$data3","update","_response$data4","delete","_response$data5","acknowledge","_response$data6","getStats","_response$data7","quizzesAPI","_response$data8","_response$data9","quizData","_response$data0","_response$data1","_response$data10","startQuiz","_response$data11","submitQuiz","answers","_response$data12","getResults","_response$data13","clearIncompleteAttempts","_response$data14","gamesAPI","_response$data15","_response$data16","gameData","_response$data17","_response$data18","_response$data19","startGame","_response$data20","submitGame","_response$data21","_response$data22","getHistory","_response$data23","getLeaderboard","gameId","_response$data24","trainingAPI","_response$data25","_response$data26","trainingData","_response$data27","payload","title","description","category","role_id","undefined","content_type","content_url","content","duration","prerequisites","_response$data28","_response$data29","startTraining","_response$data30","updateProgress","progressData","_response$data31","completeTraining","_response$data32","getProgress","_response$data33","reportsAPI","getDashboardStats","_response$data34","getComplianceReport","_response$data35","getTrainingProgressReport","_response$data36","getQuizPerformanceReport","_response$data37","getPolicyAcknowledgmentReport","_response$data38","exportReport","reportType","format","_response$data39","factsAPI","_response$data40","_response$data41","factData","_response$data42","_response$data43","_response$data44","getRandom","_response$data45","getCategories","_response$data46","getByCategory","_response$data47","profileAPI","_response$data48","_response$data49","_response$data50","getPreferences","_response$data51","updatePreferences","preferences","_response$data52","getActivityHistory","_response$data53","toggleMFA","_response$data54","getUserStats","_response$data55"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Backoff on 429 Too Many Requests\n    if (error.response?.status === 429) {\n      const retryAfter = parseInt(error.response.headers?.['retry-after'] || '1', 10);\n      const delayMs = Math.min((isNaN(retryAfter) ? 1 : retryAfter) * 1000, 5000);\n      return new Promise((resolve) => setTimeout(resolve, delayMs)).then(() => {\n        return api.request(error.config);\n      });\n    }\n\n    if (error.response?.status === 401) {\n      // Token expired or invalid. Clear token, but do not hard-redirect to avoid SPA loops in demo mode.\n      localStorage.removeItem('authToken');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await api.put('/auth/profile', profileData);\n    return response.data;\n  },\n\n  changePassword: async (passwordData) => {\n    const response = await api.put('/auth/change-password', passwordData);\n    return response.data;\n  },\n};\n\n// Policies API calls\nexport const policiesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/policies', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/policies/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (policyData) => {\n    const response = await api.post('/policies', policyData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, policyData) => {\n    const response = await api.put(`/policies/${id}`, policyData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/policies/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  acknowledge: async (id) => {\n    const response = await api.post(`/policies/${id}/acknowledge`);\n    return response.data?.data || response.data;\n  },\n\n  getStats: async () => {\n    const response = await api.get('/policies/stats');\n    return response.data?.data || response.data;\n  },\n};\n\n// Quizzes API calls\nexport const quizzesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/quizzes', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/quizzes/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (quizData) => {\n    const response = await api.post('/quizzes', quizData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, quizData) => {\n    const response = await api.put(`/quizzes/${id}`, quizData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/quizzes/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  startQuiz: async (id) => {\n    const response = await api.post(`/quizzes/${id}/start`);\n    return response.data?.data || response.data;\n  },\n\n  submitQuiz: async (id, answers) => {\n    const response = await api.post(`/quizzes/${id}/attempt`, { answers });\n    return response.data?.data || response.data;\n  },\n\n  getResults: async (id) => {\n    const response = await api.get(`/quizzes/${id}/results`);\n    return response.data?.data || response.data;\n  },\n\n  clearIncompleteAttempts: async () => {\n    const response = await api.delete('/quizzes/clear-incomplete');\n    return response.data?.data || response.data;\n  },\n};\n\n// Games API calls\nexport const gamesAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/games', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/games/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (gameData) => {\n    const response = await api.post('/games', gameData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, gameData) => {\n    const response = await api.put(`/games/${id}`, gameData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/games/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  startGame: async (id) => {\n    const response = await api.post(`/games/${id}/start`);\n    return response.data?.data || response.data;\n  },\n\n  submitGame: async (id, gameData) => {\n    const response = await api.post(`/games/${id}/attempt`, gameData);\n    return response.data?.data || response.data;\n  },\n\n  getResults: async (id) => {\n    const response = await api.get(`/games/${id}/results`);\n    return response.data?.data || response.data;\n  },\n\n  getHistory: async () => {\n    const response = await api.get('/games/history');\n    return response.data?.data || response.data;\n  },\n\n  getLeaderboard: async (gameId) => {\n    const response = await api.get(`/games/${gameId}/leaderboard`);\n    return response.data?.data || response.data;\n  },\n};\n\n// Training API calls\nexport const trainingAPI = {\n  getAll: async () => {\n    const response = await api.get('/training');\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/training/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (trainingData) => {\n    // Map frontend form fields to backend schema\n    const payload = {\n      title: trainingData.title,\n      description: trainingData.description,\n      category: trainingData.category,\n      role_id: undefined, // backend defaults in dev\n      content_type: 'interactive',\n      content_url: trainingData.content || '',\n      duration: trainingData.duration || 0,\n      prerequisites: [],\n    };\n    const response = await api.post('/training', payload);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, trainingData) => {\n    const response = await api.put(`/training/${id}`, trainingData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/training/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  startTraining: async (id) => {\n    const response = await api.post(`/training/${id}/start`);\n    return response.data?.data || response.data;\n  },\n\n  updateProgress: async (id, progressData) => {\n    const response = await api.put(`/training/${id}/progress`, progressData);\n    return response.data?.data || response.data;\n  },\n\n  completeTraining: async (id) => {\n    const response = await api.post(`/training/${id}/complete`);\n    return response.data?.data || response.data;\n  },\n\n  getProgress: async () => {\n    const response = await api.get('/training/progress');\n    return response.data?.data || response.data;\n  },\n};\n\n// Reports API calls\nexport const reportsAPI = {\n  getDashboardStats: async () => {\n    const response = await api.get('/reports/dashboard');\n    return response.data?.data || response.data;\n  },\n\n  getComplianceReport: async (filters) => {\n    const response = await api.get('/reports/compliance', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getTrainingProgressReport: async (filters) => {\n    const response = await api.get('/reports/training-progress', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getQuizPerformanceReport: async (filters) => {\n    const response = await api.get('/reports/quiz-performance', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getPolicyAcknowledgmentReport: async (filters) => {\n    const response = await api.get('/reports/policy-acknowledgments', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  exportReport: async (reportType, format, filters) => {\n    const response = await api.post('/reports/export', {\n      reportType,\n      format,\n      filters\n    });\n    return response.data?.data || response.data;\n  },\n};\n\n// Facts API calls\nexport const factsAPI = {\n  getAll: async (filters) => {\n    const response = await api.get('/facts', { params: filters });\n    return response.data?.data || response.data;\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`/facts/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  create: async (factData) => {\n    const response = await api.post('/facts', factData);\n    return response.data?.data || response.data;\n  },\n\n  update: async (id, factData) => {\n    const response = await api.put(`/facts/${id}`, factData);\n    return response.data?.data || response.data;\n  },\n\n  delete: async (id) => {\n    const response = await api.delete(`/facts/${id}`);\n    return response.data?.data || response.data;\n  },\n\n  getRandom: async () => {\n    const response = await api.get('/facts/random');\n    return response.data?.data || response.data;\n  },\n\n  getCategories: async () => {\n    const response = await api.get('/facts/categories');\n    return response.data?.data || response.data;\n  },\n\n  getByCategory: async (category) => {\n    const response = await api.get(`/facts/category/${category}`);\n    return response.data?.data || response.data;\n  },\n};\n\n// Profile API calls\nexport const profileAPI = {\n  getProfile: async () => {\n    const response = await api.get('/profile');\n    return response.data?.data || response.data;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await api.put('/profile', profileData);\n    return response.data?.data || response.data;\n  },\n\n  changePassword: async (passwordData) => {\n    const response = await api.put('/profile/password', passwordData);\n    return response.data?.data || response.data;\n  },\n\n  getPreferences: async () => {\n    const response = await api.get('/profile/preferences');\n    return response.data?.data || response.data;\n  },\n\n  updatePreferences: async (preferences) => {\n    const response = await api.put('/profile/preferences', preferences);\n    return response.data?.data || response.data;\n  },\n\n  getActivityHistory: async () => {\n    const response = await api.get('/profile/activity');\n    return response.data?.data || response.data;\n  },\n\n  toggleMFA: async () => {\n    const response = await api.put('/profile/mfa');\n    return response.data?.data || response.data;\n  },\n\n  getUserStats: async () => {\n    const response = await api.get('/profile/stats');\n    return response.data?.data || response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,gBAAA;EACT;EACA,IAAI,EAAAD,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAAA,IAAAC,qBAAA;IAClC,MAAMC,UAAU,GAAGC,QAAQ,CAAC,EAAAF,qBAAA,GAAAP,KAAK,CAACG,QAAQ,CAACZ,OAAO,cAAAgB,qBAAA,uBAAtBA,qBAAA,CAAyB,aAAa,CAAC,KAAI,GAAG,EAAE,EAAE,CAAC;IAC/E,MAAMG,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACC,KAAK,CAACL,UAAU,CAAC,GAAG,CAAC,GAAGA,UAAU,IAAI,IAAI,EAAE,IAAI,CAAC;IAC3E,OAAO,IAAIP,OAAO,CAAEa,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEJ,OAAO,CAAC,CAAC,CAACM,IAAI,CAAC,MAAM;MACvE,OAAO7B,GAAG,CAACM,OAAO,CAACO,KAAK,CAACL,MAAM,CAAC;IAClC,CAAC,CAAC;EACJ;EAEA,IAAI,EAAAU,gBAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAT,YAAY,CAACoB,UAAU,CAAC,WAAW,CAAC;EACtC;EACA,OAAOhB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMkB,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,MAAMjB,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;IAC3D,OAAOjB,QAAQ,CAACmB,IAAI;EACtB,CAAC;EAEDC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMpB,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,cAAc,CAAC;IAC/C,OAAOlB,QAAQ,CAACmB,IAAI;EACtB,CAAC;EAEDE,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,MAAMrB,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOtB,QAAQ,CAACmB,IAAI;EACtB,CAAC;EAEDI,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMxB,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,gBAAgB,EAAEM,QAAQ,CAAC;IAC3D,OAAOxB,QAAQ,CAACmB,IAAI;EACtB,CAAC;EAEDM,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpC,MAAM1B,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,eAAe,EAAED,WAAW,CAAC;IAC5D,OAAO1B,QAAQ,CAACmB,IAAI;EACtB,CAAC;EAEDS,cAAc,EAAE,MAAOC,YAAY,IAAK;IACtC,MAAM7B,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,uBAAuB,EAAEE,YAAY,CAAC;IACrE,OAAO7B,QAAQ,CAACmB,IAAI;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,WAAW,GAAG;EACzBC,MAAM,EAAE,MAAOC,OAAO,IAAK;IAAA,IAAAC,cAAA;IACzB,MAAMjC,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,WAAW,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAChE,OAAO,EAAAC,cAAA,GAAAjC,QAAQ,CAACmB,IAAI,cAAAc,cAAA,uBAAbA,cAAA,CAAed,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgB,OAAO,EAAE,MAAOC,EAAE,IAAK;IAAA,IAAAC,eAAA;IACrB,MAAMrC,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,aAAac,EAAE,EAAE,CAAC;IACjD,OAAO,EAAAC,eAAA,GAAArC,QAAQ,CAACmB,IAAI,cAAAkB,eAAA,uBAAbA,eAAA,CAAelB,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDlC,MAAM,EAAE,MAAOqD,UAAU,IAAK;IAAA,IAAAC,eAAA;IAC5B,MAAMvC,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,WAAW,EAAEoB,UAAU,CAAC;IACxD,OAAO,EAAAC,eAAA,GAAAvC,QAAQ,CAACmB,IAAI,cAAAoB,eAAA,uBAAbA,eAAA,CAAepB,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDqB,MAAM,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,UAAU,KAAK;IAAA,IAAAG,eAAA;IAChC,MAAMzC,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,aAAaS,EAAE,EAAE,EAAEE,UAAU,CAAC;IAC7D,OAAO,EAAAG,eAAA,GAAAzC,QAAQ,CAACmB,IAAI,cAAAsB,eAAA,uBAAbA,eAAA,CAAetB,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDuB,MAAM,EAAE,MAAON,EAAE,IAAK;IAAA,IAAAO,eAAA;IACpB,MAAM3C,QAAQ,GAAG,MAAMhB,GAAG,CAAC0D,MAAM,CAAC,aAAaN,EAAE,EAAE,CAAC;IACpD,OAAO,EAAAO,eAAA,GAAA3C,QAAQ,CAACmB,IAAI,cAAAwB,eAAA,uBAAbA,eAAA,CAAexB,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDyB,WAAW,EAAE,MAAOR,EAAE,IAAK;IAAA,IAAAS,eAAA;IACzB,MAAM7C,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,aAAakB,EAAE,cAAc,CAAC;IAC9D,OAAO,EAAAS,eAAA,GAAA7C,QAAQ,CAACmB,IAAI,cAAA0B,eAAA,uBAAbA,eAAA,CAAe1B,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED2B,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,eAAA;IACpB,MAAM/C,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAO,EAAAyB,eAAA,GAAA/C,QAAQ,CAACmB,IAAI,cAAA4B,eAAA,uBAAbA,eAAA,CAAe5B,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAM6B,UAAU,GAAG;EACxBjB,MAAM,EAAE,MAAOC,OAAO,IAAK;IAAA,IAAAiB,eAAA;IACzB,MAAMjD,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAU,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAC/D,OAAO,EAAAiB,eAAA,GAAAjD,QAAQ,CAACmB,IAAI,cAAA8B,eAAA,uBAAbA,eAAA,CAAe9B,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgB,OAAO,EAAE,MAAOC,EAAE,IAAK;IAAA,IAAAc,eAAA;IACrB,MAAMlD,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,YAAYc,EAAE,EAAE,CAAC;IAChD,OAAO,EAAAc,eAAA,GAAAlD,QAAQ,CAACmB,IAAI,cAAA+B,eAAA,uBAAbA,eAAA,CAAe/B,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDlC,MAAM,EAAE,MAAOkE,QAAQ,IAAK;IAAA,IAAAC,eAAA;IAC1B,MAAMpD,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,UAAU,EAAEiC,QAAQ,CAAC;IACrD,OAAO,EAAAC,eAAA,GAAApD,QAAQ,CAACmB,IAAI,cAAAiC,eAAA,uBAAbA,eAAA,CAAejC,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDqB,MAAM,EAAE,MAAAA,CAAOJ,EAAE,EAAEe,QAAQ,KAAK;IAAA,IAAAE,eAAA;IAC9B,MAAMrD,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,YAAYS,EAAE,EAAE,EAAEe,QAAQ,CAAC;IAC1D,OAAO,EAAAE,eAAA,GAAArD,QAAQ,CAACmB,IAAI,cAAAkC,eAAA,uBAAbA,eAAA,CAAelC,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDuB,MAAM,EAAE,MAAON,EAAE,IAAK;IAAA,IAAAkB,gBAAA;IACpB,MAAMtD,QAAQ,GAAG,MAAMhB,GAAG,CAAC0D,MAAM,CAAC,YAAYN,EAAE,EAAE,CAAC;IACnD,OAAO,EAAAkB,gBAAA,GAAAtD,QAAQ,CAACmB,IAAI,cAAAmC,gBAAA,uBAAbA,gBAAA,CAAenC,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDoC,SAAS,EAAE,MAAOnB,EAAE,IAAK;IAAA,IAAAoB,gBAAA;IACvB,MAAMxD,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,YAAYkB,EAAE,QAAQ,CAAC;IACvD,OAAO,EAAAoB,gBAAA,GAAAxD,QAAQ,CAACmB,IAAI,cAAAqC,gBAAA,uBAAbA,gBAAA,CAAerC,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDsC,UAAU,EAAE,MAAAA,CAAOrB,EAAE,EAAEsB,OAAO,KAAK;IAAA,IAAAC,gBAAA;IACjC,MAAM3D,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,YAAYkB,EAAE,UAAU,EAAE;MAAEsB;IAAQ,CAAC,CAAC;IACtE,OAAO,EAAAC,gBAAA,GAAA3D,QAAQ,CAACmB,IAAI,cAAAwC,gBAAA,uBAAbA,gBAAA,CAAexC,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDyC,UAAU,EAAE,MAAOxB,EAAE,IAAK;IAAA,IAAAyB,gBAAA;IACxB,MAAM7D,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,YAAYc,EAAE,UAAU,CAAC;IACxD,OAAO,EAAAyB,gBAAA,GAAA7D,QAAQ,CAACmB,IAAI,cAAA0C,gBAAA,uBAAbA,gBAAA,CAAe1C,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED2C,uBAAuB,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACnC,MAAM/D,QAAQ,GAAG,MAAMhB,GAAG,CAAC0D,MAAM,CAAC,2BAA2B,CAAC;IAC9D,OAAO,EAAAqB,gBAAA,GAAA/D,QAAQ,CAACmB,IAAI,cAAA4C,gBAAA,uBAAbA,gBAAA,CAAe5C,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAM6C,QAAQ,GAAG;EACtBjC,MAAM,EAAE,MAAOC,OAAO,IAAK;IAAA,IAAAiC,gBAAA;IACzB,MAAMjE,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,QAAQ,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAC7D,OAAO,EAAAiC,gBAAA,GAAAjE,QAAQ,CAACmB,IAAI,cAAA8C,gBAAA,uBAAbA,gBAAA,CAAe9C,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgB,OAAO,EAAE,MAAOC,EAAE,IAAK;IAAA,IAAA8B,gBAAA;IACrB,MAAMlE,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAUc,EAAE,EAAE,CAAC;IAC9C,OAAO,EAAA8B,gBAAA,GAAAlE,QAAQ,CAACmB,IAAI,cAAA+C,gBAAA,uBAAbA,gBAAA,CAAe/C,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDlC,MAAM,EAAE,MAAOkF,QAAQ,IAAK;IAAA,IAAAC,gBAAA;IAC1B,MAAMpE,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,QAAQ,EAAEiD,QAAQ,CAAC;IACnD,OAAO,EAAAC,gBAAA,GAAApE,QAAQ,CAACmB,IAAI,cAAAiD,gBAAA,uBAAbA,gBAAA,CAAejD,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDqB,MAAM,EAAE,MAAAA,CAAOJ,EAAE,EAAE+B,QAAQ,KAAK;IAAA,IAAAE,gBAAA;IAC9B,MAAMrE,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,UAAUS,EAAE,EAAE,EAAE+B,QAAQ,CAAC;IACxD,OAAO,EAAAE,gBAAA,GAAArE,QAAQ,CAACmB,IAAI,cAAAkD,gBAAA,uBAAbA,gBAAA,CAAelD,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDuB,MAAM,EAAE,MAAON,EAAE,IAAK;IAAA,IAAAkC,gBAAA;IACpB,MAAMtE,QAAQ,GAAG,MAAMhB,GAAG,CAAC0D,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;IACjD,OAAO,EAAAkC,gBAAA,GAAAtE,QAAQ,CAACmB,IAAI,cAAAmD,gBAAA,uBAAbA,gBAAA,CAAenD,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDoD,SAAS,EAAE,MAAOnC,EAAE,IAAK;IAAA,IAAAoC,gBAAA;IACvB,MAAMxE,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,UAAUkB,EAAE,QAAQ,CAAC;IACrD,OAAO,EAAAoC,gBAAA,GAAAxE,QAAQ,CAACmB,IAAI,cAAAqD,gBAAA,uBAAbA,gBAAA,CAAerD,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDsD,UAAU,EAAE,MAAAA,CAAOrC,EAAE,EAAE+B,QAAQ,KAAK;IAAA,IAAAO,gBAAA;IAClC,MAAM1E,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,UAAUkB,EAAE,UAAU,EAAE+B,QAAQ,CAAC;IACjE,OAAO,EAAAO,gBAAA,GAAA1E,QAAQ,CAACmB,IAAI,cAAAuD,gBAAA,uBAAbA,gBAAA,CAAevD,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDyC,UAAU,EAAE,MAAOxB,EAAE,IAAK;IAAA,IAAAuC,gBAAA;IACxB,MAAM3E,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAUc,EAAE,UAAU,CAAC;IACtD,OAAO,EAAAuC,gBAAA,GAAA3E,QAAQ,CAACmB,IAAI,cAAAwD,gBAAA,uBAAbA,gBAAA,CAAexD,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDyD,UAAU,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACtB,MAAM7E,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,gBAAgB,CAAC;IAChD,OAAO,EAAAuD,gBAAA,GAAA7E,QAAQ,CAACmB,IAAI,cAAA0D,gBAAA,uBAAbA,gBAAA,CAAe1D,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED2D,cAAc,EAAE,MAAOC,MAAM,IAAK;IAAA,IAAAC,gBAAA;IAChC,MAAMhF,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAUyD,MAAM,cAAc,CAAC;IAC9D,OAAO,EAAAC,gBAAA,GAAAhF,QAAQ,CAACmB,IAAI,cAAA6D,gBAAA,uBAAbA,gBAAA,CAAe7D,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAM8D,WAAW,GAAG;EACzBlD,MAAM,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAmD,gBAAA;IAClB,MAAMlF,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAO,EAAA4D,gBAAA,GAAAlF,QAAQ,CAACmB,IAAI,cAAA+D,gBAAA,uBAAbA,gBAAA,CAAe/D,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgB,OAAO,EAAE,MAAOC,EAAE,IAAK;IAAA,IAAA+C,gBAAA;IACrB,MAAMnF,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,aAAac,EAAE,EAAE,CAAC;IACjD,OAAO,EAAA+C,gBAAA,GAAAnF,QAAQ,CAACmB,IAAI,cAAAgE,gBAAA,uBAAbA,gBAAA,CAAehE,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDlC,MAAM,EAAE,MAAOmG,YAAY,IAAK;IAAA,IAAAC,gBAAA;IAC9B;IACA,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAEH,YAAY,CAACG,KAAK;MACzBC,WAAW,EAAEJ,YAAY,CAACI,WAAW;MACrCC,QAAQ,EAAEL,YAAY,CAACK,QAAQ;MAC/BC,OAAO,EAAEC,SAAS;MAAE;MACpBC,YAAY,EAAE,aAAa;MAC3BC,WAAW,EAAET,YAAY,CAACU,OAAO,IAAI,EAAE;MACvCC,QAAQ,EAAEX,YAAY,CAACW,QAAQ,IAAI,CAAC;MACpCC,aAAa,EAAE;IACjB,CAAC;IACD,MAAMhG,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,WAAW,EAAEoE,OAAO,CAAC;IACrD,OAAO,EAAAD,gBAAA,GAAArF,QAAQ,CAACmB,IAAI,cAAAkE,gBAAA,uBAAbA,gBAAA,CAAelE,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDqB,MAAM,EAAE,MAAAA,CAAOJ,EAAE,EAAEgD,YAAY,KAAK;IAAA,IAAAa,gBAAA;IAClC,MAAMjG,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,aAAaS,EAAE,EAAE,EAAEgD,YAAY,CAAC;IAC/D,OAAO,EAAAa,gBAAA,GAAAjG,QAAQ,CAACmB,IAAI,cAAA8E,gBAAA,uBAAbA,gBAAA,CAAe9E,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDuB,MAAM,EAAE,MAAON,EAAE,IAAK;IAAA,IAAA8D,gBAAA;IACpB,MAAMlG,QAAQ,GAAG,MAAMhB,GAAG,CAAC0D,MAAM,CAAC,aAAaN,EAAE,EAAE,CAAC;IACpD,OAAO,EAAA8D,gBAAA,GAAAlG,QAAQ,CAACmB,IAAI,cAAA+E,gBAAA,uBAAbA,gBAAA,CAAe/E,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgF,aAAa,EAAE,MAAO/D,EAAE,IAAK;IAAA,IAAAgE,gBAAA;IAC3B,MAAMpG,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,aAAakB,EAAE,QAAQ,CAAC;IACxD,OAAO,EAAAgE,gBAAA,GAAApG,QAAQ,CAACmB,IAAI,cAAAiF,gBAAA,uBAAbA,gBAAA,CAAejF,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDkF,cAAc,EAAE,MAAAA,CAAOjE,EAAE,EAAEkE,YAAY,KAAK;IAAA,IAAAC,gBAAA;IAC1C,MAAMvG,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,aAAaS,EAAE,WAAW,EAAEkE,YAAY,CAAC;IACxE,OAAO,EAAAC,gBAAA,GAAAvG,QAAQ,CAACmB,IAAI,cAAAoF,gBAAA,uBAAbA,gBAAA,CAAepF,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDqF,gBAAgB,EAAE,MAAOpE,EAAE,IAAK;IAAA,IAAAqE,gBAAA;IAC9B,MAAMzG,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,aAAakB,EAAE,WAAW,CAAC;IAC3D,OAAO,EAAAqE,gBAAA,GAAAzG,QAAQ,CAACmB,IAAI,cAAAsF,gBAAA,uBAAbA,gBAAA,CAAetF,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDuF,WAAW,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACvB,MAAM3G,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,oBAAoB,CAAC;IACpD,OAAO,EAAAqF,gBAAA,GAAA3G,QAAQ,CAACmB,IAAI,cAAAwF,gBAAA,uBAAbA,gBAAA,CAAexF,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMyF,UAAU,GAAG;EACxBC,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IAC7B,MAAM9G,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,oBAAoB,CAAC;IACpD,OAAO,EAAAwF,gBAAA,GAAA9G,QAAQ,CAACmB,IAAI,cAAA2F,gBAAA,uBAAbA,gBAAA,CAAe3F,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED4F,mBAAmB,EAAE,MAAO/E,OAAO,IAAK;IAAA,IAAAgF,gBAAA;IACtC,MAAMhH,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,qBAAqB,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAC1E,OAAO,EAAAgF,gBAAA,GAAAhH,QAAQ,CAACmB,IAAI,cAAA6F,gBAAA,uBAAbA,gBAAA,CAAe7F,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED8F,yBAAyB,EAAE,MAAOjF,OAAO,IAAK;IAAA,IAAAkF,gBAAA;IAC5C,MAAMlH,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,4BAA4B,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IACjF,OAAO,EAAAkF,gBAAA,GAAAlH,QAAQ,CAACmB,IAAI,cAAA+F,gBAAA,uBAAbA,gBAAA,CAAe/F,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgG,wBAAwB,EAAE,MAAOnF,OAAO,IAAK;IAAA,IAAAoF,gBAAA;IAC3C,MAAMpH,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,2BAA2B,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAChF,OAAO,EAAAoF,gBAAA,GAAApH,QAAQ,CAACmB,IAAI,cAAAiG,gBAAA,uBAAbA,gBAAA,CAAejG,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDkG,6BAA6B,EAAE,MAAOrF,OAAO,IAAK;IAAA,IAAAsF,gBAAA;IAChD,MAAMtH,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,iCAAiC,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IACtF,OAAO,EAAAsF,gBAAA,GAAAtH,QAAQ,CAACmB,IAAI,cAAAmG,gBAAA,uBAAbA,gBAAA,CAAenG,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDoG,YAAY,EAAE,MAAAA,CAAOC,UAAU,EAAEC,MAAM,EAAEzF,OAAO,KAAK;IAAA,IAAA0F,gBAAA;IACnD,MAAM1H,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,iBAAiB,EAAE;MACjDsG,UAAU;MACVC,MAAM;MACNzF;IACF,CAAC,CAAC;IACF,OAAO,EAAA0F,gBAAA,GAAA1H,QAAQ,CAACmB,IAAI,cAAAuG,gBAAA,uBAAbA,gBAAA,CAAevG,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMwG,QAAQ,GAAG;EACtB5F,MAAM,EAAE,MAAOC,OAAO,IAAK;IAAA,IAAA4F,gBAAA;IACzB,MAAM5H,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,QAAQ,EAAE;MAAEY,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAC7D,OAAO,EAAA4F,gBAAA,GAAA5H,QAAQ,CAACmB,IAAI,cAAAyG,gBAAA,uBAAbA,gBAAA,CAAezG,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgB,OAAO,EAAE,MAAOC,EAAE,IAAK;IAAA,IAAAyF,gBAAA;IACrB,MAAM7H,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAUc,EAAE,EAAE,CAAC;IAC9C,OAAO,EAAAyF,gBAAA,GAAA7H,QAAQ,CAACmB,IAAI,cAAA0G,gBAAA,uBAAbA,gBAAA,CAAe1G,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDlC,MAAM,EAAE,MAAO6I,QAAQ,IAAK;IAAA,IAAAC,gBAAA;IAC1B,MAAM/H,QAAQ,GAAG,MAAMhB,GAAG,CAACkC,IAAI,CAAC,QAAQ,EAAE4G,QAAQ,CAAC;IACnD,OAAO,EAAAC,gBAAA,GAAA/H,QAAQ,CAACmB,IAAI,cAAA4G,gBAAA,uBAAbA,gBAAA,CAAe5G,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDqB,MAAM,EAAE,MAAAA,CAAOJ,EAAE,EAAE0F,QAAQ,KAAK;IAAA,IAAAE,gBAAA;IAC9B,MAAMhI,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,UAAUS,EAAE,EAAE,EAAE0F,QAAQ,CAAC;IACxD,OAAO,EAAAE,gBAAA,GAAAhI,QAAQ,CAACmB,IAAI,cAAA6G,gBAAA,uBAAbA,gBAAA,CAAe7G,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDuB,MAAM,EAAE,MAAON,EAAE,IAAK;IAAA,IAAA6F,gBAAA;IACpB,MAAMjI,QAAQ,GAAG,MAAMhB,GAAG,CAAC0D,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;IACjD,OAAO,EAAA6F,gBAAA,GAAAjI,QAAQ,CAACmB,IAAI,cAAA8G,gBAAA,uBAAbA,gBAAA,CAAe9G,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED+G,SAAS,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACrB,MAAMnI,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAO,EAAA6G,gBAAA,GAAAnI,QAAQ,CAACmB,IAAI,cAAAgH,gBAAA,uBAAbA,gBAAA,CAAehH,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDiH,aAAa,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACzB,MAAMrI,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAO,EAAA+G,gBAAA,GAAArI,QAAQ,CAACmB,IAAI,cAAAkH,gBAAA,uBAAbA,gBAAA,CAAelH,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDmH,aAAa,EAAE,MAAO7C,QAAQ,IAAK;IAAA,IAAA8C,gBAAA;IACjC,MAAMvI,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,mBAAmBmE,QAAQ,EAAE,CAAC;IAC7D,OAAO,EAAA8C,gBAAA,GAAAvI,QAAQ,CAACmB,IAAI,cAAAoH,gBAAA,uBAAbA,gBAAA,CAAepH,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMqH,UAAU,GAAG;EACxBnH,UAAU,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAoH,gBAAA;IACtB,MAAMzI,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAO,EAAAmH,gBAAA,GAAAzI,QAAQ,CAACmB,IAAI,cAAAsH,gBAAA,uBAAbA,gBAAA,CAAetH,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDM,aAAa,EAAE,MAAOC,WAAW,IAAK;IAAA,IAAAgH,gBAAA;IACpC,MAAM1I,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,UAAU,EAAED,WAAW,CAAC;IACvD,OAAO,EAAAgH,gBAAA,GAAA1I,QAAQ,CAACmB,IAAI,cAAAuH,gBAAA,uBAAbA,gBAAA,CAAevH,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDS,cAAc,EAAE,MAAOC,YAAY,IAAK;IAAA,IAAA8G,gBAAA;IACtC,MAAM3I,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,mBAAmB,EAAEE,YAAY,CAAC;IACjE,OAAO,EAAA8G,gBAAA,GAAA3I,QAAQ,CAACmB,IAAI,cAAAwH,gBAAA,uBAAbA,gBAAA,CAAexH,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDyH,cAAc,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IAC1B,MAAM7I,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,sBAAsB,CAAC;IACtD,OAAO,EAAAuH,gBAAA,GAAA7I,QAAQ,CAACmB,IAAI,cAAA0H,gBAAA,uBAAbA,gBAAA,CAAe1H,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED2H,iBAAiB,EAAE,MAAOC,WAAW,IAAK;IAAA,IAAAC,gBAAA;IACxC,MAAMhJ,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,sBAAsB,EAAEoH,WAAW,CAAC;IACnE,OAAO,EAAAC,gBAAA,GAAAhJ,QAAQ,CAACmB,IAAI,cAAA6H,gBAAA,uBAAbA,gBAAA,CAAe7H,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAED8H,kBAAkB,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IAC9B,MAAMlJ,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAO,EAAA4H,gBAAA,GAAAlJ,QAAQ,CAACmB,IAAI,cAAA+H,gBAAA,uBAAbA,gBAAA,CAAe/H,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDgI,SAAS,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACrB,MAAMpJ,QAAQ,GAAG,MAAMhB,GAAG,CAAC2C,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAO,EAAAyH,gBAAA,GAAApJ,QAAQ,CAACmB,IAAI,cAAAiI,gBAAA,uBAAbA,gBAAA,CAAejI,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C,CAAC;EAEDkI,YAAY,EAAE,MAAAA,CAAA,KAAY;IAAA,IAAAC,gBAAA;IACxB,MAAMtJ,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,gBAAgB,CAAC;IAChD,OAAO,EAAAgI,gBAAA,GAAAtJ,QAAQ,CAACmB,IAAI,cAAAmI,gBAAA,uBAAbA,gBAAA,CAAenI,IAAI,KAAInB,QAAQ,CAACmB,IAAI;EAC7C;AACF,CAAC;AAED,eAAenC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}