{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  }\n};\n\n// Policies API calls\nexport const policiesAPI = {\n  getAll: async filters => {\n    const response = await api.get('/policies', {\n      params: filters\n    });\n    return response.data;\n  },\n  getStats: async () => {\n    const response = await api.get('/policies/stats');\n    return response.data;\n  }\n};\n\n// Quizzes API calls\nexport const quizzesAPI = {\n  getAll: async filters => {\n    const response = await api.get('/quizzes', {\n      params: filters\n    });\n    return response.data;\n  },\n  getResults: async () => {\n    const response = await api.get('/quizzes/results');\n    return response.data;\n  }\n};\n\n// Games API calls\nexport const gamesAPI = {\n  getAll: async filters => {\n    const response = await api.get('/games', {\n      params: filters\n    });\n    return response.data;\n  },\n  getHistory: async () => {\n    const response = await api.get('/games/history');\n    return response.data;\n  }\n};\n\n// Training API calls\nexport const trainingAPI = {\n  getAll: async () => {\n    const response = await api.get('/training');\n    return response.data;\n  },\n  getProgress: async () => {\n    const response = await api.get('/training/progress');\n    return response.data;\n  }\n};\n\n// Reports API calls\nexport const reportsAPI = {\n  getDashboardStats: async () => {\n    const response = await api.get('/reports/dashboard');\n    return response.data;\n  }\n};\n\n// Facts API calls\nexport const factsAPI = {\n  getRandom: async () => {\n    const response = await api.get('/facts/random');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","data","logout","getProfile","get","policiesAPI","getAll","filters","params","getStats","quizzesAPI","getResults","gamesAPI","getHistory","trainingAPI","getProgress","reportsAPI","getDashboardStats","factsAPI","getRandom"],"sources":["C:/Users/ranas/Desktop/project/apps/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('authToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  logout: async () => {\r\n    const response = await api.post('/auth/logout');\r\n    return response.data;\r\n  },\r\n\r\n  getProfile: async () => {\r\n    const response = await api.get('/auth/profile');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Policies API calls\r\nexport const policiesAPI = {\r\n  getAll: async (filters) => {\r\n    const response = await api.get('/policies', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getStats: async () => {\r\n    const response = await api.get('/policies/stats');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Quizzes API calls\r\nexport const quizzesAPI = {\r\n  getAll: async (filters) => {\r\n    const response = await api.get('/quizzes', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getResults: async () => {\r\n    const response = await api.get('/quizzes/results');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Games API calls\r\nexport const gamesAPI = {\r\n  getAll: async (filters) => {\r\n    const response = await api.get('/games', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  getHistory: async () => {\r\n    const response = await api.get('/games/history');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Training API calls\r\nexport const trainingAPI = {\r\n  getAll: async () => {\r\n    const response = await api.get('/training');\r\n    return response.data;\r\n  },\r\n\r\n  getProgress: async () => {\r\n    const response = await api.get('/training/progress');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Reports API calls\r\nexport const reportsAPI = {\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/reports/dashboard');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Facts API calls\r\nexport const factsAPI = {\r\n  getRandom: async () => {\r\n    const response = await api.get('/facts/random');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}