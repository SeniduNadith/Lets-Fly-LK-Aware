{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const SimpleAuthContext=/*#__PURE__*/createContext(undefined);export const SimpleAuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const isAuthenticated=!!user;const login=async(username,password)=>{try{const response=await axios.post('/api/auth/login',{username,password});const{token,user:userData}=response.data;// Store token and set default header\nlocalStorage.setItem('token',token);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);setUser(userData);}catch(error){var _error$response,_error$response$data;console.error('Login failed:',error);throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed');}};const logout=()=>{localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];setUser(null);};const value={user,isAuthenticated,login,logout};return/*#__PURE__*/_jsx(SimpleAuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(SimpleAuthContext);if(context===undefined){throw new Error('useAuth must be used within a SimpleAuthProvider');}return context;};export default SimpleAuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","axios","jsx","_jsx","SimpleAuthContext","undefined","SimpleAuthProvider","_ref","children","user","setUser","isAuthenticated","login","username","password","response","post","token","userData","data","localStorage","setItem","defaults","headers","common","concat","error","_error$response","_error$response$data","console","Error","logout","removeItem","value","Provider","useAuth","context"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/contexts/SimpleAuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface SimpleUser {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role_id: number;\r\n  role: string;\r\n  role_name?: string;\r\n  department: string;\r\n}\r\n\r\ninterface SimpleAuthContextType {\r\n  user: SimpleUser | null;\r\n  isAuthenticated: boolean;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst SimpleAuthContext = createContext<SimpleAuthContextType | undefined>(undefined);\r\n\r\ninterface SimpleAuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const SimpleAuthProvider: React.FC<SimpleAuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<SimpleUser | null>(null);\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  const login = async (username: string, password: string): Promise<void> => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', {\r\n        username,\r\n        password\r\n      });\r\n\r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token and set default header\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(userData);\r\n    } catch (error: any) {\r\n      console.error('Login failed:', error);\r\n      throw new Error(error.response?.data?.error || 'Login failed');\r\n    }\r\n  };\r\n\r\n  const logout = (): void => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  const value: SimpleAuthContextType = {\r\n    user,\r\n    isAuthenticated,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <SimpleAuthContext.Provider value={value}>\r\n      {children}\r\n    </SimpleAuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): SimpleAuthContextType => {\r\n  const context = useContext(SimpleAuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within a SimpleAuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default SimpleAuthContext;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAqB1B,KAAM,CAAAC,iBAAiB,cAAGN,aAAa,CAAoCO,SAAS,CAAC,CAMrF,MAAO,MAAM,CAAAC,kBAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAoB,IAAI,CAAC,CAEzD,KAAM,CAAAW,eAAe,CAAG,CAAC,CAACF,IAAI,CAE9B,KAAM,CAAAG,KAAK,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAAoB,CACzE,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,IAAI,CAAC,iBAAiB,CAAE,CACnDH,QAAQ,CACRC,QACF,CAAC,CAAC,CAEF,KAAM,CAAEG,KAAK,CAAER,IAAI,CAAES,QAAS,CAAC,CAAGH,QAAQ,CAACI,IAAI,CAE/C;AACAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,KAAK,CAAC,CACpChB,KAAK,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,WAAAC,MAAA,CAAaR,KAAK,CAAE,CAElEP,OAAO,CAACQ,QAAQ,CAAC,CACnB,CAAE,MAAOQ,KAAU,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACnBC,OAAO,CAACH,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,KAAM,IAAI,CAAAI,KAAK,CAAC,EAAAH,eAAA,CAAAD,KAAK,CAACX,QAAQ,UAAAY,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBR,IAAI,UAAAS,oBAAA,iBAApBA,oBAAA,CAAsBF,KAAK,GAAI,cAAc,CAAC,CAChE,CACF,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAY,CACzBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC,CAChC,MAAO,CAAA/B,KAAK,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACrDd,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAuB,KAA4B,CAAG,CACnCxB,IAAI,CACJE,eAAe,CACfC,KAAK,CACLmB,MACF,CAAC,CAED,mBACE5B,IAAA,CAACC,iBAAiB,CAAC8B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAzB,QAAA,CACtCA,QAAQ,CACiB,CAAC,CAEjC,CAAC,CAED,MAAO,MAAM,CAAA2B,OAAO,CAAGA,CAAA,GAA6B,CAClD,KAAM,CAAAC,OAAO,CAAGrC,UAAU,CAACK,iBAAiB,CAAC,CAC7C,GAAIgC,OAAO,GAAK/B,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAyB,KAAK,CAAC,kDAAkD,CAAC,CACrE,CACA,MAAO,CAAAM,OAAO,CAChB,CAAC,CAED,cAAe,CAAAhC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}