{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { reportsAPI, factsAPI } from '../services/api';\nexport const useDashboard = () => {\n  _s();\n  const [data, setData] = useState({\n    stats: null,\n    dailyTip: null,\n    loading: true,\n    error: null\n  });\n  const fetchDashboardData = async () => {\n    try {\n      var _tipResponse$data;\n      setData(prev => ({\n        ...prev,\n        loading: true,\n        error: null\n      }));\n\n      // Fetch dashboard statistics\n      const statsResponse = await reportsAPI.getDashboardStats();\n\n      // Fetch daily security tip\n      const tipResponse = await factsAPI.getRandom();\n      setData({\n        stats: statsResponse.data,\n        dailyTip: ((_tipResponse$data = tipResponse.data) === null || _tipResponse$data === void 0 ? void 0 : _tipResponse$data.fact) || 'Always use strong, unique passwords for each account.',\n        loading: false,\n        error: null\n      });\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      setData(prev => ({\n        ...prev,\n        loading: false,\n        error: 'Failed to load dashboard data. Please try again.'\n      }));\n    }\n  };\n  const refreshData = () => {\n    fetchDashboardData();\n  };\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  return {\n    ...data,\n    refreshData\n  };\n};\n_s(useDashboard, \"pw3Bs9W/wJtRwWveFkUuqiTvkao=\");","map":{"version":3,"names":["useState","useEffect","reportsAPI","factsAPI","useDashboard","_s","data","setData","stats","dailyTip","loading","error","fetchDashboardData","_tipResponse$data","prev","statsResponse","getDashboardStats","tipResponse","getRandom","fact","console","refreshData"],"sources":["C:/Users/ranas/Desktop/project/apps/frontend/src/hooks/useDashboard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { reportsAPI, factsAPI } from '../services/api';\r\n\r\nexport const useDashboard = () => {\r\n  const [data, setData] = useState({\r\n    stats: null,\r\n    dailyTip: null,\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setData(prev => ({ ...prev, loading: true, error: null }));\r\n      \r\n      // Fetch dashboard statistics\r\n      const statsResponse = await reportsAPI.getDashboardStats();\r\n      \r\n      // Fetch daily security tip\r\n      const tipResponse = await factsAPI.getRandom();\r\n      \r\n      setData({\r\n        stats: statsResponse.data,\r\n        dailyTip: tipResponse.data?.fact || 'Always use strong, unique passwords for each account.',\r\n        loading: false,\r\n        error: null\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      setData(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: 'Failed to load dashboard data. Please try again.'\r\n      }));\r\n    }\r\n  };\r\n\r\n  const refreshData = () => {\r\n    fetchDashboardData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  return {\r\n    ...data,\r\n    refreshData\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,iBAAiB;AAEtD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MAAA,IAAAC,iBAAA;MACFN,OAAO,CAACO,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEJ,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;;MAE1D;MACA,MAAMI,aAAa,GAAG,MAAMb,UAAU,CAACc,iBAAiB,CAAC,CAAC;;MAE1D;MACA,MAAMC,WAAW,GAAG,MAAMd,QAAQ,CAACe,SAAS,CAAC,CAAC;MAE9CX,OAAO,CAAC;QACNC,KAAK,EAAEO,aAAa,CAACT,IAAI;QACzBG,QAAQ,EAAE,EAAAI,iBAAA,GAAAI,WAAW,CAACX,IAAI,cAAAO,iBAAA,uBAAhBA,iBAAA,CAAkBM,IAAI,KAAI,uDAAuD;QAC3FT,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDJ,OAAO,CAACO,IAAI,KAAK;QACf,GAAGA,IAAI;QACPJ,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBT,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdW,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACL,GAAGN,IAAI;IACPe;EACF,CAAC;AACH,CAAC;AAAChB,EAAA,CA9CWD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}