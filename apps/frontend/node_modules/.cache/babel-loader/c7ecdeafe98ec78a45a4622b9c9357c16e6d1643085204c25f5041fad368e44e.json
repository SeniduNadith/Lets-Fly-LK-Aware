{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seniy\\\\Downloads\\\\project (1)\\\\project\\\\apps\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock user data for public access\nconst mockUser = {\n  id: 0,\n  username: 'public',\n  email: 'public@example.com',\n  first_name: 'Public',\n  last_name: 'User',\n  department: 'Public',\n  role: 'public',\n  mfa_enabled: false\n};\n\n// Initial state - always authenticated as public user\nconst initialState = {\n  user: mockUser,\n  token: 'public-token',\n  isAuthenticated: true,\n  isLoading: false\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? {\n          ...state.user,\n          ...action.payload\n        } : null\n      };\n    default:\n      return state;\n  }\n};\n\n// Context\n\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Provider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Skip authentication check for public access\n  useEffect(() => {\n    // Set as authenticated with public user\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: {\n        user: mockUser,\n        token: 'public-token'\n      }\n    });\n  }, []);\n\n  // Login function\n  const login = async (username, password, mfaToken) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password,\n        mfaToken\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success(`Welcome back, ${user.first_name}!`);\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.requiresMFA) {\n        toast.error('MFA token required');\n        throw new Error('MFA_REQUIRED');\n      } else {\n        toast.error(errorMessage);\n        throw new Error(errorMessage);\n      }\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n\n  // Update profile function\n  const updateProfile = async data => {\n    try {\n      await axios.put('/api/auth/profile', data);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: data\n      });\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to update profile';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully');\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to change password';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    updateProfile,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 10\n  }, this);\n};\n\n// Hook\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","mockUser","id","username","email","first_name","last_name","department","role","mfa_enabled","initialState","user","token","isAuthenticated","isLoading","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","defaults","headers","common","localStorage","setItem","removeItem","login","password","mfaToken","response","post","data","success","error","_error$response","_error$response$data","_error$response2","_error$response2$data","errorMessage","requiresMFA","Error","logout","updateProfile","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Types\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  department: string;\r\n  role?: string;\r\n  mfa_enabled: boolean;\r\n  last_login?: string;\r\n  created_at?: string;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\ntype AuthAction =\r\n  | { type: 'LOGIN_START' }\r\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\r\n  | { type: 'LOGIN_FAILURE'; payload: string }\r\n  | { type: 'LOGOUT' }\r\n  | { type: 'SET_LOADING'; payload: boolean }\r\n  | { type: 'UPDATE_USER'; payload: Partial<User> };\r\n\r\n// Mock user data for public access\r\nconst mockUser: User = {\r\n  id: 0,\r\n  username: 'public',\r\n  email: 'public@example.com',\r\n  first_name: 'Public',\r\n  last_name: 'User',\r\n  department: 'Public',\r\n  role: 'public',\r\n  mfa_enabled: false\r\n};\r\n\r\n// Initial state - always authenticated as public user\r\nconst initialState: AuthState = {\r\n  user: mockUser,\r\n  token: 'public-token',\r\n  isAuthenticated: true,\r\n  isLoading: false,\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case 'SET_LOADING':\r\n      return { ...state, isLoading: action.payload };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: state.user ? { ...state.user, ...action.payload } : null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Context\r\ninterface AuthContextType extends AuthState {\r\n  login: (username: string, password: string, mfaToken?: string) => Promise<void>;\r\n  logout: () => void;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n  changePassword: (currentPassword: string, newPassword: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n      localStorage.setItem('token', state.token);\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Skip authentication check for public access\r\n  useEffect(() => {\r\n    // Set as authenticated with public user\r\n    dispatch({\r\n      type: 'LOGIN_SUCCESS',\r\n      payload: { user: mockUser, token: 'public-token' },\r\n    });\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username: string, password: string, mfaToken?: string) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n\r\n    try {\r\n      const response = await axios.post('/api/auth/login', {\r\n        username,\r\n        password,\r\n        mfaToken,\r\n      });\r\n\r\n      const { user, token } = response.data;\r\n\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token },\r\n      });\r\n\r\n      toast.success(`Welcome back, ${user.first_name}!`);\r\n    } catch (error: any) {\r\n      const errorMessage = error.response?.data?.error || 'Login failed';\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: errorMessage });\r\n      \r\n      if (error.response?.data?.requiresMFA) {\r\n        toast.error('MFA token required');\r\n        throw new Error('MFA_REQUIRED');\r\n      } else {\r\n        toast.error(errorMessage);\r\n        throw new Error(errorMessage);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  // Update profile function\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      await axios.put('/api/auth/profile', data);\r\n      dispatch({ type: 'UPDATE_USER', payload: data });\r\n      toast.success('Profile updated successfully');\r\n    } catch (error: any) {\r\n      const errorMessage = error.response?.data?.error || 'Failed to update profile';\r\n      toast.error(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  // Change password function\r\n  const changePassword = async (currentPassword: string, newPassword: string) => {\r\n    try {\r\n      await axios.put('/api/auth/change-password', {\r\n        currentPassword,\r\n        newPassword,\r\n      });\r\n      toast.success('Password changed successfully');\r\n    } catch (error: any) {\r\n      const errorMessage = error.response?.data?.error || 'Failed to change password';\r\n      toast.error(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    ...state,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n// Hook\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}