{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const isAuthenticated=!!user;// Check for existing session on mount\nuseEffect(()=>{const checkAuth=async()=>{try{const token=localStorage.getItem('token');if(token){axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);const response=await axios.get('/api/auth/profile');setUser(response.data.user);}}catch(error){console.error('Auth check failed:',error);localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];}finally{setIsLoading(false);}};checkAuth();},[]);const login=async(username,password,mfaToken)=>{try{setIsLoading(true);const requestData={username,password};if(mfaToken){requestData.mfaToken=mfaToken;}const response=await axios.post('/api/auth/login',requestData);const{token,user:userData}=response.data;// Store token and set default header\nlocalStorage.setItem('token',token);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);setUser(userData);}catch(error){var _error$response,_error$response$data;console.error('Login failed:',error);throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed');}finally{setIsLoading(false);}};const logout=()=>{localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];setUser(null);};const updateProfile=async data=>{try{const response=await axios.put('/api/auth/profile',data);setUser(response.data.user);}catch(error){var _error$response2,_error$response2$data;console.error('Profile update failed:',error);throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Profile update failed');}};const changePassword=async(currentPassword,newPassword)=>{try{await axios.put('/api/auth/change-password',{currentPassword,newPassword});}catch(error){var _error$response3,_error$response3$data;console.error('Password change failed:',error);throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Password change failed');}};const value={user,isAuthenticated,isLoading,login,logout,updateProfile,changePassword};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","isAuthenticated","checkAuth","token","localStorage","getItem","defaults","headers","common","concat","response","get","data","error","console","removeItem","login","username","password","mfaToken","requestData","post","userData","setItem","_error$response","_error$response$data","Error","logout","updateProfile","put","_error$response2","_error$response2$data","changePassword","currentPassword","newPassword","_error$response3","_error$response3$data","value","Provider","useAuth","context"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role_id: number;\r\n  role: string;\r\n  role_name?: string;\r\n  department: string;\r\n  is_active: boolean;\r\n  mfa_enabled: boolean;\r\n  last_login?: string;\r\n  created_at?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (username: string, password: string, mfaToken?: string) => Promise<void>;\r\n  logout: () => void;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n  changePassword: (currentPassword: string, newPassword: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  // Check for existing session on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          const response = await axios.get('/api/auth/profile');\r\n          setUser(response.data.user);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string, mfaToken?: string): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      const requestData: any = {\r\n        username,\r\n        password\r\n      };\r\n      \r\n      if (mfaToken) {\r\n        requestData.mfaToken = mfaToken;\r\n      }\r\n      \r\n      const response = await axios.post('/api/auth/login', requestData);\r\n\r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token and set default header\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(userData);\r\n    } catch (error: any) {\r\n      console.error('Login failed:', error);\r\n      throw new Error(error.response?.data?.error || 'Login failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = (): void => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>): Promise<void> => {\r\n    try {\r\n      const response = await axios.put('/api/auth/profile', data);\r\n      setUser(response.data.user);\r\n    } catch (error: any) {\r\n      console.error('Profile update failed:', error);\r\n      throw new Error(error.response?.data?.error || 'Profile update failed');\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword: string, newPassword: string): Promise<void> => {\r\n    try {\r\n      await axios.put('/api/auth/change-password', {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Password change failed:', error);\r\n      throw new Error(error.response?.data?.error || 'Password change failed');\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    changePassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}