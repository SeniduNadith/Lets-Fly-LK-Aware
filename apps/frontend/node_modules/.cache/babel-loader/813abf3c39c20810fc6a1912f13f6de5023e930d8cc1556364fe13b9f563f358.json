{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seniy\\\\Downloads\\\\project (1)\\\\project\\\\apps\\\\frontend\\\\src\\\\contexts\\\\SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(undefined);\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:3001', {\n      transports: ['websocket', 'polling'],\n      timeout: 20000,\n      forceNew: true\n    });\n    newSocket.on('connect', () => {\n      console.log('Socket connected:', newSocket.id);\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Socket disconnected');\n      setIsConnected(false);\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      setIsConnected(false);\n    });\n    setSocket(newSocket);\n\n    // Cleanup on unmount\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const joinRoleRoom = role => {\n    if (socket) {\n      socket.emit('join-role', role);\n    }\n  };\n  const leaveRoleRoom = role => {\n    if (socket) {\n      socket.emit('leave-role', role);\n    }\n  };\n  const emitQuizSubmitted = data => {\n    if (socket) {\n      socket.emit('quiz-submitted', data);\n    }\n  };\n  const emitGameCompleted = data => {\n    if (socket) {\n      socket.emit('game-completed', data);\n    }\n  };\n  const emitPolicyAcknowledged = data => {\n    if (socket) {\n      socket.emit('policy-acknowledged', data);\n    }\n  };\n  const onQuizUpdate = callback => {\n    if (socket) {\n      socket.on('quiz-update', callback);\n    }\n  };\n  const onGameUpdate = callback => {\n    if (socket) {\n      socket.on('game-update', callback);\n    }\n  };\n  const onPolicyUpdate = callback => {\n    if (socket) {\n      socket.on('policy-update', callback);\n    }\n  };\n  const value = {\n    socket,\n    isConnected,\n    joinRoleRoom,\n    leaveRoleRoom,\n    emitQuizSubmitted,\n    emitGameCompleted,\n    emitPolicyAcknowledged,\n    onQuizUpdate,\n    onGameUpdate,\n    onPolicyUpdate\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"QMiDLkz4HTcH977k6GWSjZyAdcs=\");\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s2(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default SocketContext;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","undefined","SocketProvider","children","_s","socket","setSocket","isConnected","setIsConnected","newSocket","process","env","REACT_APP_API_URL","transports","timeout","forceNew","on","console","log","id","error","close","joinRoleRoom","role","emit","leaveRoleRoom","emitQuizSubmitted","data","emitGameCompleted","emitPolicyAcknowledged","onQuizUpdate","callback","onGameUpdate","onPolicyUpdate","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/seniy/Downloads/project (1)/project/apps/frontend/src/contexts/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\ninterface SocketContextType {\r\n  socket: Socket | null;\r\n  isConnected: boolean;\r\n  joinRoleRoom: (role: string) => void;\r\n  leaveRoleRoom: (role: string) => void;\r\n  emitQuizSubmitted: (data: any) => void;\r\n  emitGameCompleted: (data: any) => void;\r\n  emitPolicyAcknowledged: (data: any) => void;\r\n  onQuizUpdate: (callback: (data: any) => void) => void;\r\n  onGameUpdate: (callback: (data: any) => void) => void;\r\n  onPolicyUpdate: (callback: (data: any) => void) => void;\r\n}\r\n\r\nconst SocketContext = createContext<SocketContextType | undefined>(undefined);\r\n\r\ninterface SocketProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:3001', {\r\n      transports: ['websocket', 'polling'],\r\n      timeout: 20000,\r\n      forceNew: true\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Socket connected:', newSocket.id);\r\n      setIsConnected(true);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Socket disconnected');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  const joinRoleRoom = (role: string): void => {\r\n    if (socket) {\r\n      socket.emit('join-role', role);\r\n    }\r\n  };\r\n\r\n  const leaveRoleRoom = (role: string): void => {\r\n    if (socket) {\r\n      socket.emit('leave-role', role);\r\n    }\r\n  };\r\n\r\n  const emitQuizSubmitted = (data: any): void => {\r\n    if (socket) {\r\n      socket.emit('quiz-submitted', data);\r\n    }\r\n  };\r\n\r\n  const emitGameCompleted = (data: any): void => {\r\n    if (socket) {\r\n      socket.emit('game-completed', data);\r\n    }\r\n  };\r\n\r\n  const emitPolicyAcknowledged = (data: any): void => {\r\n    if (socket) {\r\n      socket.emit('policy-acknowledged', data);\r\n    }\r\n  };\r\n\r\n  const onQuizUpdate = (callback: (data: any) => void): void => {\r\n    if (socket) {\r\n      socket.on('quiz-update', callback);\r\n    }\r\n  };\r\n\r\n  const onGameUpdate = (callback: (data: any) => void): void => {\r\n    if (socket) {\r\n      socket.on('game-update', callback);\r\n    }\r\n  };\r\n\r\n  const onPolicyUpdate = (callback: (data: any) => void): void => {\r\n    if (socket) {\r\n      socket.on('policy-update', callback);\r\n    }\r\n  };\r\n\r\n  const value: SocketContextType = {\r\n    socket,\r\n    isConnected,\r\n    joinRoleRoom,\r\n    leaveRoleRoom,\r\n    emitQuizSubmitted,\r\n    emitGameCompleted,\r\n    emitPolicyAcknowledged,\r\n    onQuizUpdate,\r\n    onGameUpdate,\r\n    onPolicyUpdate\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSocket = (): SocketContextType => {\r\n  const context = useContext(SocketContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default SocketContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}